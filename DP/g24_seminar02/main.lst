                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Aug  6 2010) (UNIX)
                              4 ; This file was generated Sat Oct 18 16:50:44 2014
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _md_multiplication
                             14 	.globl _md_substraction
                             15 	.globl _md_addition
                             16 	.globl _copy
                             17 	.globl _mp_multiplication
                             18 	.globl _mp_substraction
                             19 	.globl _mp_addition
                             20 	.globl _CY
                             21 	.globl _AC
                             22 	.globl _F0
                             23 	.globl _RS1
                             24 	.globl _RS0
                             25 	.globl _OV
                             26 	.globl _F1
                             27 	.globl _P
                             28 	.globl _PS
                             29 	.globl _PT1
                             30 	.globl _PX1
                             31 	.globl _PT0
                             32 	.globl _PX0
                             33 	.globl _RD
                             34 	.globl _WR
                             35 	.globl _T1
                             36 	.globl _T0
                             37 	.globl _INT1
                             38 	.globl _INT0
                             39 	.globl _TXD
                             40 	.globl _RXD
                             41 	.globl _P3_7
                             42 	.globl _P3_6
                             43 	.globl _P3_5
                             44 	.globl _P3_4
                             45 	.globl _P3_3
                             46 	.globl _P3_2
                             47 	.globl _P3_1
                             48 	.globl _P3_0
                             49 	.globl _EA
                             50 	.globl _ES
                             51 	.globl _ET1
                             52 	.globl _EX1
                             53 	.globl _ET0
                             54 	.globl _EX0
                             55 	.globl _P2_7
                             56 	.globl _P2_6
                             57 	.globl _P2_5
                             58 	.globl _P2_4
                             59 	.globl _P2_3
                             60 	.globl _P2_2
                             61 	.globl _P2_1
                             62 	.globl _P2_0
                             63 	.globl _SM0
                             64 	.globl _SM1
                             65 	.globl _SM2
                             66 	.globl _REN
                             67 	.globl _TB8
                             68 	.globl _RB8
                             69 	.globl _TI
                             70 	.globl _RI
                             71 	.globl _P1_7
                             72 	.globl _P1_6
                             73 	.globl _P1_5
                             74 	.globl _P1_4
                             75 	.globl _P1_3
                             76 	.globl _P1_2
                             77 	.globl _P1_1
                             78 	.globl _P1_0
                             79 	.globl _TF1
                             80 	.globl _TR1
                             81 	.globl _TF0
                             82 	.globl _TR0
                             83 	.globl _IE1
                             84 	.globl _IT1
                             85 	.globl _IE0
                             86 	.globl _IT0
                             87 	.globl _P0_7
                             88 	.globl _P0_6
                             89 	.globl _P0_5
                             90 	.globl _P0_4
                             91 	.globl _P0_3
                             92 	.globl _P0_2
                             93 	.globl _P0_1
                             94 	.globl _P0_0
                             95 	.globl _B
                             96 	.globl _ACC
                             97 	.globl _PSW
                             98 	.globl _IP
                             99 	.globl _P3
                            100 	.globl _IE
                            101 	.globl _P2
                            102 	.globl _SBUF
                            103 	.globl _SCON
                            104 	.globl _P1
                            105 	.globl _TH1
                            106 	.globl _TH0
                            107 	.globl _TL1
                            108 	.globl _TL0
                            109 	.globl _TMOD
                            110 	.globl _TCON
                            111 	.globl _PCON
                            112 	.globl _DPH
                            113 	.globl _DPL
                            114 	.globl _SP
                            115 	.globl _P0
                            116 	.globl _sprime
                            117 	.globl _m
                            118 	.globl _y
                            119 	.globl _x
                            120 	.globl _resM
                            121 	.globl _resS
                            122 	.globl _resA
                            123 	.globl _endBrk
                            124 	.globl _startBrk
                            125 	.globl _md_multiplication_PARM_5
                            126 	.globl _md_multiplication_PARM_4
                            127 	.globl _md_multiplication_PARM_3
                            128 	.globl _md_multiplication_PARM_2
                            129 	.globl _md_substraction_PARM_4
                            130 	.globl _md_substraction_PARM_3
                            131 	.globl _md_substraction_PARM_2
                            132 	.globl _md_addition_PARM_5
                            133 	.globl _md_addition_PARM_4
                            134 	.globl _md_addition_PARM_3
                            135 	.globl _md_addition_PARM_2
                            136 	.globl _copy_PARM_2
                            137 	.globl _mp_multiplication_PARM_3
                            138 	.globl _mp_multiplication_PARM_2
                            139 	.globl _mp_substraction_PARM_3
                            140 	.globl _mp_substraction_PARM_2
                            141 	.globl _mp_addition_PARM_3
                            142 	.globl _mp_addition_PARM_2
                            143 	.globl _i
                            144 	.globl _temp
                            145 	.globl _cA
                            146 	.globl _c
                            147 ;--------------------------------------------------------
                            148 ; special function registers
                            149 ;--------------------------------------------------------
                            150 	.area RSEG    (DATA)
                    0080    151 G$P0$0$0 == 0x0080
                    0080    152 _P0	=	0x0080
                    0081    153 G$SP$0$0 == 0x0081
                    0081    154 _SP	=	0x0081
                    0082    155 G$DPL$0$0 == 0x0082
                    0082    156 _DPL	=	0x0082
                    0083    157 G$DPH$0$0 == 0x0083
                    0083    158 _DPH	=	0x0083
                    0087    159 G$PCON$0$0 == 0x0087
                    0087    160 _PCON	=	0x0087
                    0088    161 G$TCON$0$0 == 0x0088
                    0088    162 _TCON	=	0x0088
                    0089    163 G$TMOD$0$0 == 0x0089
                    0089    164 _TMOD	=	0x0089
                    008A    165 G$TL0$0$0 == 0x008a
                    008A    166 _TL0	=	0x008a
                    008B    167 G$TL1$0$0 == 0x008b
                    008B    168 _TL1	=	0x008b
                    008C    169 G$TH0$0$0 == 0x008c
                    008C    170 _TH0	=	0x008c
                    008D    171 G$TH1$0$0 == 0x008d
                    008D    172 _TH1	=	0x008d
                    0090    173 G$P1$0$0 == 0x0090
                    0090    174 _P1	=	0x0090
                    0098    175 G$SCON$0$0 == 0x0098
                    0098    176 _SCON	=	0x0098
                    0099    177 G$SBUF$0$0 == 0x0099
                    0099    178 _SBUF	=	0x0099
                    00A0    179 G$P2$0$0 == 0x00a0
                    00A0    180 _P2	=	0x00a0
                    00A8    181 G$IE$0$0 == 0x00a8
                    00A8    182 _IE	=	0x00a8
                    00B0    183 G$P3$0$0 == 0x00b0
                    00B0    184 _P3	=	0x00b0
                    00B8    185 G$IP$0$0 == 0x00b8
                    00B8    186 _IP	=	0x00b8
                    00D0    187 G$PSW$0$0 == 0x00d0
                    00D0    188 _PSW	=	0x00d0
                    00E0    189 G$ACC$0$0 == 0x00e0
                    00E0    190 _ACC	=	0x00e0
                    00F0    191 G$B$0$0 == 0x00f0
                    00F0    192 _B	=	0x00f0
                            193 ;--------------------------------------------------------
                            194 ; special function bits
                            195 ;--------------------------------------------------------
                            196 	.area RSEG    (DATA)
                    0080    197 G$P0_0$0$0 == 0x0080
                    0080    198 _P0_0	=	0x0080
                    0081    199 G$P0_1$0$0 == 0x0081
                    0081    200 _P0_1	=	0x0081
                    0082    201 G$P0_2$0$0 == 0x0082
                    0082    202 _P0_2	=	0x0082
                    0083    203 G$P0_3$0$0 == 0x0083
                    0083    204 _P0_3	=	0x0083
                    0084    205 G$P0_4$0$0 == 0x0084
                    0084    206 _P0_4	=	0x0084
                    0085    207 G$P0_5$0$0 == 0x0085
                    0085    208 _P0_5	=	0x0085
                    0086    209 G$P0_6$0$0 == 0x0086
                    0086    210 _P0_6	=	0x0086
                    0087    211 G$P0_7$0$0 == 0x0087
                    0087    212 _P0_7	=	0x0087
                    0088    213 G$IT0$0$0 == 0x0088
                    0088    214 _IT0	=	0x0088
                    0089    215 G$IE0$0$0 == 0x0089
                    0089    216 _IE0	=	0x0089
                    008A    217 G$IT1$0$0 == 0x008a
                    008A    218 _IT1	=	0x008a
                    008B    219 G$IE1$0$0 == 0x008b
                    008B    220 _IE1	=	0x008b
                    008C    221 G$TR0$0$0 == 0x008c
                    008C    222 _TR0	=	0x008c
                    008D    223 G$TF0$0$0 == 0x008d
                    008D    224 _TF0	=	0x008d
                    008E    225 G$TR1$0$0 == 0x008e
                    008E    226 _TR1	=	0x008e
                    008F    227 G$TF1$0$0 == 0x008f
                    008F    228 _TF1	=	0x008f
                    0090    229 G$P1_0$0$0 == 0x0090
                    0090    230 _P1_0	=	0x0090
                    0091    231 G$P1_1$0$0 == 0x0091
                    0091    232 _P1_1	=	0x0091
                    0092    233 G$P1_2$0$0 == 0x0092
                    0092    234 _P1_2	=	0x0092
                    0093    235 G$P1_3$0$0 == 0x0093
                    0093    236 _P1_3	=	0x0093
                    0094    237 G$P1_4$0$0 == 0x0094
                    0094    238 _P1_4	=	0x0094
                    0095    239 G$P1_5$0$0 == 0x0095
                    0095    240 _P1_5	=	0x0095
                    0096    241 G$P1_6$0$0 == 0x0096
                    0096    242 _P1_6	=	0x0096
                    0097    243 G$P1_7$0$0 == 0x0097
                    0097    244 _P1_7	=	0x0097
                    0098    245 G$RI$0$0 == 0x0098
                    0098    246 _RI	=	0x0098
                    0099    247 G$TI$0$0 == 0x0099
                    0099    248 _TI	=	0x0099
                    009A    249 G$RB8$0$0 == 0x009a
                    009A    250 _RB8	=	0x009a
                    009B    251 G$TB8$0$0 == 0x009b
                    009B    252 _TB8	=	0x009b
                    009C    253 G$REN$0$0 == 0x009c
                    009C    254 _REN	=	0x009c
                    009D    255 G$SM2$0$0 == 0x009d
                    009D    256 _SM2	=	0x009d
                    009E    257 G$SM1$0$0 == 0x009e
                    009E    258 _SM1	=	0x009e
                    009F    259 G$SM0$0$0 == 0x009f
                    009F    260 _SM0	=	0x009f
                    00A0    261 G$P2_0$0$0 == 0x00a0
                    00A0    262 _P2_0	=	0x00a0
                    00A1    263 G$P2_1$0$0 == 0x00a1
                    00A1    264 _P2_1	=	0x00a1
                    00A2    265 G$P2_2$0$0 == 0x00a2
                    00A2    266 _P2_2	=	0x00a2
                    00A3    267 G$P2_3$0$0 == 0x00a3
                    00A3    268 _P2_3	=	0x00a3
                    00A4    269 G$P2_4$0$0 == 0x00a4
                    00A4    270 _P2_4	=	0x00a4
                    00A5    271 G$P2_5$0$0 == 0x00a5
                    00A5    272 _P2_5	=	0x00a5
                    00A6    273 G$P2_6$0$0 == 0x00a6
                    00A6    274 _P2_6	=	0x00a6
                    00A7    275 G$P2_7$0$0 == 0x00a7
                    00A7    276 _P2_7	=	0x00a7
                    00A8    277 G$EX0$0$0 == 0x00a8
                    00A8    278 _EX0	=	0x00a8
                    00A9    279 G$ET0$0$0 == 0x00a9
                    00A9    280 _ET0	=	0x00a9
                    00AA    281 G$EX1$0$0 == 0x00aa
                    00AA    282 _EX1	=	0x00aa
                    00AB    283 G$ET1$0$0 == 0x00ab
                    00AB    284 _ET1	=	0x00ab
                    00AC    285 G$ES$0$0 == 0x00ac
                    00AC    286 _ES	=	0x00ac
                    00AF    287 G$EA$0$0 == 0x00af
                    00AF    288 _EA	=	0x00af
                    00B0    289 G$P3_0$0$0 == 0x00b0
                    00B0    290 _P3_0	=	0x00b0
                    00B1    291 G$P3_1$0$0 == 0x00b1
                    00B1    292 _P3_1	=	0x00b1
                    00B2    293 G$P3_2$0$0 == 0x00b2
                    00B2    294 _P3_2	=	0x00b2
                    00B3    295 G$P3_3$0$0 == 0x00b3
                    00B3    296 _P3_3	=	0x00b3
                    00B4    297 G$P3_4$0$0 == 0x00b4
                    00B4    298 _P3_4	=	0x00b4
                    00B5    299 G$P3_5$0$0 == 0x00b5
                    00B5    300 _P3_5	=	0x00b5
                    00B6    301 G$P3_6$0$0 == 0x00b6
                    00B6    302 _P3_6	=	0x00b6
                    00B7    303 G$P3_7$0$0 == 0x00b7
                    00B7    304 _P3_7	=	0x00b7
                    00B0    305 G$RXD$0$0 == 0x00b0
                    00B0    306 _RXD	=	0x00b0
                    00B1    307 G$TXD$0$0 == 0x00b1
                    00B1    308 _TXD	=	0x00b1
                    00B2    309 G$INT0$0$0 == 0x00b2
                    00B2    310 _INT0	=	0x00b2
                    00B3    311 G$INT1$0$0 == 0x00b3
                    00B3    312 _INT1	=	0x00b3
                    00B4    313 G$T0$0$0 == 0x00b4
                    00B4    314 _T0	=	0x00b4
                    00B5    315 G$T1$0$0 == 0x00b5
                    00B5    316 _T1	=	0x00b5
                    00B6    317 G$WR$0$0 == 0x00b6
                    00B6    318 _WR	=	0x00b6
                    00B7    319 G$RD$0$0 == 0x00b7
                    00B7    320 _RD	=	0x00b7
                    00B8    321 G$PX0$0$0 == 0x00b8
                    00B8    322 _PX0	=	0x00b8
                    00B9    323 G$PT0$0$0 == 0x00b9
                    00B9    324 _PT0	=	0x00b9
                    00BA    325 G$PX1$0$0 == 0x00ba
                    00BA    326 _PX1	=	0x00ba
                    00BB    327 G$PT1$0$0 == 0x00bb
                    00BB    328 _PT1	=	0x00bb
                    00BC    329 G$PS$0$0 == 0x00bc
                    00BC    330 _PS	=	0x00bc
                    00D0    331 G$P$0$0 == 0x00d0
                    00D0    332 _P	=	0x00d0
                    00D1    333 G$F1$0$0 == 0x00d1
                    00D1    334 _F1	=	0x00d1
                    00D2    335 G$OV$0$0 == 0x00d2
                    00D2    336 _OV	=	0x00d2
                    00D3    337 G$RS0$0$0 == 0x00d3
                    00D3    338 _RS0	=	0x00d3
                    00D4    339 G$RS1$0$0 == 0x00d4
                    00D4    340 _RS1	=	0x00d4
                    00D5    341 G$F0$0$0 == 0x00d5
                    00D5    342 _F0	=	0x00d5
                    00D6    343 G$AC$0$0 == 0x00d6
                    00D6    344 _AC	=	0x00d6
                    00D7    345 G$CY$0$0 == 0x00d7
                    00D7    346 _CY	=	0x00d7
                            347 ;--------------------------------------------------------
                            348 ; overlayable register banks
                            349 ;--------------------------------------------------------
                            350 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     351 	.ds 8
                            352 ;--------------------------------------------------------
                            353 ; internal ram data
                            354 ;--------------------------------------------------------
                            355 	.area DSEG    (DATA)
                    0000    356 G$c$0$0==.
   0000                     357 _c::
   0000                     358 	.ds 1
                    0001    359 G$cA$0$0==.
   0001                     360 _cA::
   0001                     361 	.ds 1
                    0002    362 G$temp$0$0==.
   0002                     363 _temp::
   0002                     364 	.ds 2
                    0004    365 G$i$0$0==.
   0004                     366 _i::
   0004                     367 	.ds 2
                    0006    368 Lmp_addition$in1$1$1==.
   0006                     369 _mp_addition_PARM_2:
   0006                     370 	.ds 3
                    0009    371 Lmp_addition$in2$1$1==.
   0009                     372 _mp_addition_PARM_3:
   0009                     373 	.ds 3
                    000C    374 Lmp_addition$res$1$1==.
   000C                     375 _mp_addition_res_1_1:
   000C                     376 	.ds 3
                    000F    377 Lmp_substraction$in1$1$1==.
   000F                     378 _mp_substraction_PARM_2:
   000F                     379 	.ds 3
                    0012    380 Lmp_substraction$in2$1$1==.
   0012                     381 _mp_substraction_PARM_3:
   0012                     382 	.ds 3
                    0015    383 Lmp_substraction$res$1$1==.
   0015                     384 _mp_substraction_res_1_1:
   0015                     385 	.ds 3
                    0018    386 Lmp_multiplication$in1$1$1==.
   0018                     387 _mp_multiplication_PARM_2:
   0018                     388 	.ds 3
                    001B    389 Lmp_multiplication$in2$1$1==.
   001B                     390 _mp_multiplication_PARM_3:
   001B                     391 	.ds 3
                    001E    392 Lmp_multiplication$res$1$1==.
   001E                     393 _mp_multiplication_res_1_1:
   001E                     394 	.ds 3
                    0021    395 Lmp_multiplication$c$1$1==.
   0021                     396 _mp_multiplication_c_1_1:
   0021                     397 	.ds 2
                    0023    398 Lmp_multiplication$i$1$1==.
   0023                     399 _mp_multiplication_i_1_1:
   0023                     400 	.ds 2
                    0025    401 Lmp_multiplication$j$1$1==.
   0025                     402 _mp_multiplication_j_1_1:
   0025                     403 	.ds 2
                    0027    404 Lmp_multiplication$temp$1$1==.
   0027                     405 _mp_multiplication_temp_1_1:
   0027                     406 	.ds 4
                    002B    407 Lmp_multiplication$sloc0$1$0==.
   002B                     408 _mp_multiplication_sloc0_1_0:
   002B                     409 	.ds 2
                    002D    410 Lcopy$in$1$1==.
   002D                     411 _copy_PARM_2:
   002D                     412 	.ds 3
                    0030    413 Lcopy$res$1$1==.
   0030                     414 _copy_res_1_1:
   0030                     415 	.ds 3
                    0033    416 Lmd_addition$in1$1$1==.
   0033                     417 _md_addition_PARM_2:
   0033                     418 	.ds 3
                    0036    419 Lmd_addition$in2$1$1==.
   0036                     420 _md_addition_PARM_3:
   0036                     421 	.ds 3
                    0039    422 Lmd_addition$m$1$1==.
   0039                     423 _md_addition_PARM_4:
   0039                     424 	.ds 3
                    003C    425 Lmd_addition$temp$1$1==.
   003C                     426 _md_addition_PARM_5:
   003C                     427 	.ds 3
                    003F    428 Lmd_substraction$in1$1$1==.
   003F                     429 _md_substraction_PARM_2:
   003F                     430 	.ds 3
                    0042    431 Lmd_substraction$in2$1$1==.
   0042                     432 _md_substraction_PARM_3:
   0042                     433 	.ds 3
                    0045    434 Lmd_substraction$m$1$1==.
   0045                     435 _md_substraction_PARM_4:
   0045                     436 	.ds 3
                    0048    437 Lmd_multiplication$in1$1$1==.
   0048                     438 _md_multiplication_PARM_2:
   0048                     439 	.ds 3
                    004B    440 Lmd_multiplication$in2$1$1==.
   004B                     441 _md_multiplication_PARM_3:
   004B                     442 	.ds 3
                    004E    443 Lmd_multiplication$m$1$1==.
   004E                     444 _md_multiplication_PARM_4:
   004E                     445 	.ds 3
                    0051    446 Lmd_multiplication$sp$1$1==.
   0051                     447 _md_multiplication_PARM_5:
   0051                     448 	.ds 3
                    0054    449 Lmd_multiplication$res$1$1==.
   0054                     450 _md_multiplication_res_1_1:
   0054                     451 	.ds 3
                    0057    452 Lmd_multiplication$i$1$1==.
   0057                     453 _md_multiplication_i_1_1:
   0057                     454 	.ds 2
                    0059    455 Lmd_multiplication$j$1$1==.
   0059                     456 _md_multiplication_j_1_1:
   0059                     457 	.ds 2
                    005B    458 Lmd_multiplication$mm$1$1==.
   005B                     459 _md_multiplication_mm_1_1:
   005B                     460 	.ds 2
                    005D    461 Lmd_multiplication$cl$1$1==.
   005D                     462 _md_multiplication_cl_1_1:
   005D                     463 	.ds 2
                    005F    464 Lmd_multiplication$temp$1$1==.
   005F                     465 _md_multiplication_temp_1_1:
   005F                     466 	.ds 4
                            467 ;--------------------------------------------------------
                            468 ; overlayable items in internal ram 
                            469 ;--------------------------------------------------------
                            470 	.area OSEG    (OVR,DATA)
                            471 ;--------------------------------------------------------
                            472 ; Stack segment in internal ram 
                            473 ;--------------------------------------------------------
                            474 	.area	SSEG	(DATA)
   0000                     475 __start__stack:
   0000                     476 	.ds	1
                            477 
                            478 ;--------------------------------------------------------
                            479 ; indirectly addressable internal ram data
                            480 ;--------------------------------------------------------
                            481 	.area ISEG    (DATA)
                            482 ;--------------------------------------------------------
                            483 ; absolute internal ram data
                            484 ;--------------------------------------------------------
                            485 	.area IABS    (ABS,DATA)
                            486 	.area IABS    (ABS,DATA)
                            487 ;--------------------------------------------------------
                            488 ; bit data
                            489 ;--------------------------------------------------------
                            490 	.area BSEG    (BIT)
                            491 ;--------------------------------------------------------
                            492 ; paged external ram data
                            493 ;--------------------------------------------------------
                            494 	.area PSEG    (PAG,XDATA)
                            495 ;--------------------------------------------------------
                            496 ; external ram data
                            497 ;--------------------------------------------------------
                            498 	.area XSEG    (XDATA)
                    FFFE    499 G$startBrk$0$0 == 0xfffe
                    FFFE    500 _startBrk	=	0xfffe
                    FFFF    501 G$endBrk$0$0 == 0xffff
                    FFFF    502 _endBrk	=	0xffff
                    0300    503 G$resA$0$0 == 0x0300
                    0300    504 _resA	=	0x0300
                    0400    505 G$resS$0$0 == 0x0400
                    0400    506 _resS	=	0x0400
                    0500    507 G$resM$0$0 == 0x0500
                    0500    508 _resM	=	0x0500
                            509 ;--------------------------------------------------------
                            510 ; absolute external ram data
                            511 ;--------------------------------------------------------
                            512 	.area XABS    (ABS,XDATA)
                    0000    513 G$x$0$0==.
   0000                     514 	.org 0x0000
   0000                     515 _x::
   0000                     516 	.ds 128
                    0080    517 G$y$0$0==.
   0080                     518 	.org 0x0080
   0080                     519 _y::
   0080                     520 	.ds 128
                    0100    521 G$m$0$0==.
   0100                     522 	.org 0x0100
   0100                     523 _m::
   0100                     524 	.ds 128
                    0180    525 G$sprime$0$0==.
   0180                     526 	.org 0x0180
   0180                     527 _sprime::
   0180                     528 	.ds 128
                            529 ;--------------------------------------------------------
                            530 ; external initialized ram data
                            531 ;--------------------------------------------------------
                            532 	.area XISEG   (XDATA)
                            533 	.area HOME    (CODE)
                            534 	.area GSINIT0 (CODE)
                            535 	.area GSINIT1 (CODE)
                            536 	.area GSINIT2 (CODE)
                            537 	.area GSINIT3 (CODE)
                            538 	.area GSINIT4 (CODE)
                            539 	.area GSINIT5 (CODE)
                            540 	.area GSINIT  (CODE)
                            541 	.area GSFINAL (CODE)
                            542 	.area CSEG    (CODE)
                            543 ;--------------------------------------------------------
                            544 ; interrupt vector 
                            545 ;--------------------------------------------------------
                            546 	.area HOME    (CODE)
   0000                     547 __interrupt_vect:
   0000 02s00r00            548 	ljmp	__sdcc_gsinit_startup
                            549 ;--------------------------------------------------------
                            550 ; global & static initialisations
                            551 ;--------------------------------------------------------
                            552 	.area HOME    (CODE)
                            553 	.area GSINIT  (CODE)
                            554 	.area GSFINAL (CODE)
                            555 	.area GSINIT  (CODE)
                            556 	.globl __sdcc_gsinit_startup
                            557 	.globl __sdcc_program_startup
                            558 	.globl __start__stack
                            559 	.globl __mcs51_genXINIT
                            560 	.globl __mcs51_genXRAMCLEAR
                            561 	.globl __mcs51_genRAMCLEAR
                    0000    562 	G$main$0$0 ==.
                    0000    563 	C$main.c$22$1$1 ==.
                            564 ;	main.c:22: volatile __xdata __at (0x0000) unsigned char x[SIZE] = {0xA3,0x71,0x79,0x01,0xFC,0xF2,0x93,0xC7,0x1C,0x69,0x2D,0x67,0x38,0x2B,0x7C,0x1A,0x40,0x88,0xBA,0x9B,0x10,0x53,0x65,0xED,0xFE,0x39,0xB4,0x77,0x3B,0xC8,0x9B,0xB2,0xE4,0xB1,0xA3,0xC9,0xCD,0xC8,0xF2,0x69,0x01,0x91,0x87,0x67,0xAC,0x6E,0x56,0xF1,0x60,0xBF,0x1E,0x0F,0x53,0xA8,0xAF,0x40,0xDB,0x76,0xB2,0xEA,0x90,0xDD,0xFF,0x40,0x0C,0xD2,0x4D,0xDC,0x5E,0xB3,0xE7,0xFA,0xB4,0x53,0x5E,0x75,0x0B,0x91,0x92,0x14,0x7E,0xD8,0xB8,0xA7,0x05,0x95,0xD0,0x55,0x97,0x30,0x78,0x41,0x81,0xEF,0xC6,0x64,0x9F,0x4A,0x9C,0x4A,0x3A,0x0B,0xCA,0xD8,0x9C,0x1A,0x64,0xA7,0xA9,0x6E,0xC8,0x0A,0xE5,0xCE,0xE2,0x3B,0x73,0x8A,0xEF,0xF0,0xE4,0xA6,0x40,0x26,0xF3,0xD9,0x50,0x1F};  //1F
   0000 90s00r00            565 	mov	dptr,#_x
   0003 74 A3               566 	mov	a,#0xA3
   0005 F0                  567 	movx	@dptr,a
   0006 90s00r01            568 	mov	dptr,#(_x + 0x0001)
   0009 74 71               569 	mov	a,#0x71
   000B F0                  570 	movx	@dptr,a
   000C 90s00r02            571 	mov	dptr,#(_x + 0x0002)
   000F 74 79               572 	mov	a,#0x79
   0011 F0                  573 	movx	@dptr,a
   0012 90s00r03            574 	mov	dptr,#(_x + 0x0003)
   0015 74 01               575 	mov	a,#0x01
   0017 F0                  576 	movx	@dptr,a
   0018 90s00r04            577 	mov	dptr,#(_x + 0x0004)
   001B 74 FC               578 	mov	a,#0xFC
   001D F0                  579 	movx	@dptr,a
   001E 90s00r05            580 	mov	dptr,#(_x + 0x0005)
   0021 74 F2               581 	mov	a,#0xF2
   0023 F0                  582 	movx	@dptr,a
   0024 90s00r06            583 	mov	dptr,#(_x + 0x0006)
   0027 74 93               584 	mov	a,#0x93
   0029 F0                  585 	movx	@dptr,a
   002A 90s00r07            586 	mov	dptr,#(_x + 0x0007)
   002D 74 C7               587 	mov	a,#0xC7
   002F F0                  588 	movx	@dptr,a
   0030 90s00r08            589 	mov	dptr,#(_x + 0x0008)
   0033 74 1C               590 	mov	a,#0x1C
   0035 F0                  591 	movx	@dptr,a
   0036 90s00r09            592 	mov	dptr,#(_x + 0x0009)
   0039 74 69               593 	mov	a,#0x69
   003B F0                  594 	movx	@dptr,a
   003C 90s00r0A            595 	mov	dptr,#(_x + 0x000a)
   003F 74 2D               596 	mov	a,#0x2D
   0041 F0                  597 	movx	@dptr,a
   0042 90s00r0B            598 	mov	dptr,#(_x + 0x000b)
   0045 74 67               599 	mov	a,#0x67
   0047 F0                  600 	movx	@dptr,a
   0048 90s00r0C            601 	mov	dptr,#(_x + 0x000c)
   004B 74 38               602 	mov	a,#0x38
   004D F0                  603 	movx	@dptr,a
   004E 90s00r0D            604 	mov	dptr,#(_x + 0x000d)
   0051 74 2B               605 	mov	a,#0x2B
   0053 F0                  606 	movx	@dptr,a
   0054 90s00r0E            607 	mov	dptr,#(_x + 0x000e)
   0057 74 7C               608 	mov	a,#0x7C
   0059 F0                  609 	movx	@dptr,a
   005A 90s00r0F            610 	mov	dptr,#(_x + 0x000f)
   005D 74 1A               611 	mov	a,#0x1A
   005F F0                  612 	movx	@dptr,a
   0060 90s00r10            613 	mov	dptr,#(_x + 0x0010)
   0063 74 40               614 	mov	a,#0x40
   0065 F0                  615 	movx	@dptr,a
   0066 90s00r11            616 	mov	dptr,#(_x + 0x0011)
   0069 74 88               617 	mov	a,#0x88
   006B F0                  618 	movx	@dptr,a
   006C 90s00r12            619 	mov	dptr,#(_x + 0x0012)
   006F 74 BA               620 	mov	a,#0xBA
   0071 F0                  621 	movx	@dptr,a
   0072 90s00r13            622 	mov	dptr,#(_x + 0x0013)
   0075 74 9B               623 	mov	a,#0x9B
   0077 F0                  624 	movx	@dptr,a
   0078 90s00r14            625 	mov	dptr,#(_x + 0x0014)
   007B 74 10               626 	mov	a,#0x10
   007D F0                  627 	movx	@dptr,a
   007E 90s00r15            628 	mov	dptr,#(_x + 0x0015)
   0081 74 53               629 	mov	a,#0x53
   0083 F0                  630 	movx	@dptr,a
   0084 90s00r16            631 	mov	dptr,#(_x + 0x0016)
   0087 74 65               632 	mov	a,#0x65
   0089 F0                  633 	movx	@dptr,a
   008A 90s00r17            634 	mov	dptr,#(_x + 0x0017)
   008D 74 ED               635 	mov	a,#0xED
   008F F0                  636 	movx	@dptr,a
   0090 90s00r18            637 	mov	dptr,#(_x + 0x0018)
   0093 74 FE               638 	mov	a,#0xFE
   0095 F0                  639 	movx	@dptr,a
   0096 90s00r19            640 	mov	dptr,#(_x + 0x0019)
   0099 74 39               641 	mov	a,#0x39
   009B F0                  642 	movx	@dptr,a
   009C 90s00r1A            643 	mov	dptr,#(_x + 0x001a)
   009F 74 B4               644 	mov	a,#0xB4
   00A1 F0                  645 	movx	@dptr,a
   00A2 90s00r1B            646 	mov	dptr,#(_x + 0x001b)
   00A5 74 77               647 	mov	a,#0x77
   00A7 F0                  648 	movx	@dptr,a
   00A8 90s00r1C            649 	mov	dptr,#(_x + 0x001c)
   00AB 74 3B               650 	mov	a,#0x3B
   00AD F0                  651 	movx	@dptr,a
   00AE 90s00r1D            652 	mov	dptr,#(_x + 0x001d)
   00B1 74 C8               653 	mov	a,#0xC8
   00B3 F0                  654 	movx	@dptr,a
   00B4 90s00r1E            655 	mov	dptr,#(_x + 0x001e)
   00B7 74 9B               656 	mov	a,#0x9B
   00B9 F0                  657 	movx	@dptr,a
   00BA 90s00r1F            658 	mov	dptr,#(_x + 0x001f)
   00BD 74 B2               659 	mov	a,#0xB2
   00BF F0                  660 	movx	@dptr,a
   00C0 90s00r20            661 	mov	dptr,#(_x + 0x0020)
   00C3 74 E4               662 	mov	a,#0xE4
   00C5 F0                  663 	movx	@dptr,a
   00C6 90s00r21            664 	mov	dptr,#(_x + 0x0021)
   00C9 74 B1               665 	mov	a,#0xB1
   00CB F0                  666 	movx	@dptr,a
   00CC 90s00r22            667 	mov	dptr,#(_x + 0x0022)
   00CF 74 A3               668 	mov	a,#0xA3
   00D1 F0                  669 	movx	@dptr,a
   00D2 90s00r23            670 	mov	dptr,#(_x + 0x0023)
   00D5 74 C9               671 	mov	a,#0xC9
   00D7 F0                  672 	movx	@dptr,a
   00D8 90s00r24            673 	mov	dptr,#(_x + 0x0024)
   00DB 74 CD               674 	mov	a,#0xCD
   00DD F0                  675 	movx	@dptr,a
   00DE 90s00r25            676 	mov	dptr,#(_x + 0x0025)
   00E1 74 C8               677 	mov	a,#0xC8
   00E3 F0                  678 	movx	@dptr,a
   00E4 90s00r26            679 	mov	dptr,#(_x + 0x0026)
   00E7 74 F2               680 	mov	a,#0xF2
   00E9 F0                  681 	movx	@dptr,a
   00EA 90s00r27            682 	mov	dptr,#(_x + 0x0027)
   00ED 74 69               683 	mov	a,#0x69
   00EF F0                  684 	movx	@dptr,a
   00F0 90s00r28            685 	mov	dptr,#(_x + 0x0028)
   00F3 74 01               686 	mov	a,#0x01
   00F5 F0                  687 	movx	@dptr,a
   00F6 90s00r29            688 	mov	dptr,#(_x + 0x0029)
   00F9 74 91               689 	mov	a,#0x91
   00FB F0                  690 	movx	@dptr,a
   00FC 90s00r2A            691 	mov	dptr,#(_x + 0x002a)
   00FF 74 87               692 	mov	a,#0x87
   0101 F0                  693 	movx	@dptr,a
   0102 90s00r2B            694 	mov	dptr,#(_x + 0x002b)
   0105 74 67               695 	mov	a,#0x67
   0107 F0                  696 	movx	@dptr,a
   0108 90s00r2C            697 	mov	dptr,#(_x + 0x002c)
   010B 74 AC               698 	mov	a,#0xAC
   010D F0                  699 	movx	@dptr,a
   010E 90s00r2D            700 	mov	dptr,#(_x + 0x002d)
   0111 74 6E               701 	mov	a,#0x6E
   0113 F0                  702 	movx	@dptr,a
   0114 90s00r2E            703 	mov	dptr,#(_x + 0x002e)
   0117 74 56               704 	mov	a,#0x56
   0119 F0                  705 	movx	@dptr,a
   011A 90s00r2F            706 	mov	dptr,#(_x + 0x002f)
   011D 74 F1               707 	mov	a,#0xF1
   011F F0                  708 	movx	@dptr,a
   0120 90s00r30            709 	mov	dptr,#(_x + 0x0030)
   0123 74 60               710 	mov	a,#0x60
   0125 F0                  711 	movx	@dptr,a
   0126 90s00r31            712 	mov	dptr,#(_x + 0x0031)
   0129 74 BF               713 	mov	a,#0xBF
   012B F0                  714 	movx	@dptr,a
   012C 90s00r32            715 	mov	dptr,#(_x + 0x0032)
   012F 74 1E               716 	mov	a,#0x1E
   0131 F0                  717 	movx	@dptr,a
   0132 90s00r33            718 	mov	dptr,#(_x + 0x0033)
   0135 74 0F               719 	mov	a,#0x0F
   0137 F0                  720 	movx	@dptr,a
   0138 90s00r34            721 	mov	dptr,#(_x + 0x0034)
   013B 74 53               722 	mov	a,#0x53
   013D F0                  723 	movx	@dptr,a
   013E 90s00r35            724 	mov	dptr,#(_x + 0x0035)
   0141 74 A8               725 	mov	a,#0xA8
   0143 F0                  726 	movx	@dptr,a
   0144 90s00r36            727 	mov	dptr,#(_x + 0x0036)
   0147 74 AF               728 	mov	a,#0xAF
   0149 F0                  729 	movx	@dptr,a
   014A 90s00r37            730 	mov	dptr,#(_x + 0x0037)
   014D 74 40               731 	mov	a,#0x40
   014F F0                  732 	movx	@dptr,a
   0150 90s00r38            733 	mov	dptr,#(_x + 0x0038)
   0153 74 DB               734 	mov	a,#0xDB
   0155 F0                  735 	movx	@dptr,a
   0156 90s00r39            736 	mov	dptr,#(_x + 0x0039)
   0159 74 76               737 	mov	a,#0x76
   015B F0                  738 	movx	@dptr,a
   015C 90s00r3A            739 	mov	dptr,#(_x + 0x003a)
   015F 74 B2               740 	mov	a,#0xB2
   0161 F0                  741 	movx	@dptr,a
   0162 90s00r3B            742 	mov	dptr,#(_x + 0x003b)
   0165 74 EA               743 	mov	a,#0xEA
   0167 F0                  744 	movx	@dptr,a
   0168 90s00r3C            745 	mov	dptr,#(_x + 0x003c)
   016B 74 90               746 	mov	a,#0x90
   016D F0                  747 	movx	@dptr,a
   016E 90s00r3D            748 	mov	dptr,#(_x + 0x003d)
   0171 74 DD               749 	mov	a,#0xDD
   0173 F0                  750 	movx	@dptr,a
   0174 90s00r3E            751 	mov	dptr,#(_x + 0x003e)
   0177 74 FF               752 	mov	a,#0xFF
   0179 F0                  753 	movx	@dptr,a
   017A 90s00r3F            754 	mov	dptr,#(_x + 0x003f)
   017D 74 40               755 	mov	a,#0x40
   017F F0                  756 	movx	@dptr,a
   0180 90s00r40            757 	mov	dptr,#(_x + 0x0040)
   0183 74 0C               758 	mov	a,#0x0C
   0185 F0                  759 	movx	@dptr,a
   0186 90s00r41            760 	mov	dptr,#(_x + 0x0041)
   0189 74 D2               761 	mov	a,#0xD2
   018B F0                  762 	movx	@dptr,a
   018C 90s00r42            763 	mov	dptr,#(_x + 0x0042)
   018F 74 4D               764 	mov	a,#0x4D
   0191 F0                  765 	movx	@dptr,a
   0192 90s00r43            766 	mov	dptr,#(_x + 0x0043)
   0195 74 DC               767 	mov	a,#0xDC
   0197 F0                  768 	movx	@dptr,a
   0198 90s00r44            769 	mov	dptr,#(_x + 0x0044)
   019B 74 5E               770 	mov	a,#0x5E
   019D F0                  771 	movx	@dptr,a
   019E 90s00r45            772 	mov	dptr,#(_x + 0x0045)
   01A1 74 B3               773 	mov	a,#0xB3
   01A3 F0                  774 	movx	@dptr,a
   01A4 90s00r46            775 	mov	dptr,#(_x + 0x0046)
   01A7 74 E7               776 	mov	a,#0xE7
   01A9 F0                  777 	movx	@dptr,a
   01AA 90s00r47            778 	mov	dptr,#(_x + 0x0047)
   01AD 74 FA               779 	mov	a,#0xFA
   01AF F0                  780 	movx	@dptr,a
   01B0 90s00r48            781 	mov	dptr,#(_x + 0x0048)
   01B3 74 B4               782 	mov	a,#0xB4
   01B5 F0                  783 	movx	@dptr,a
   01B6 90s00r49            784 	mov	dptr,#(_x + 0x0049)
   01B9 74 53               785 	mov	a,#0x53
   01BB F0                  786 	movx	@dptr,a
   01BC 90s00r4A            787 	mov	dptr,#(_x + 0x004a)
   01BF 74 5E               788 	mov	a,#0x5E
   01C1 F0                  789 	movx	@dptr,a
   01C2 90s00r4B            790 	mov	dptr,#(_x + 0x004b)
   01C5 74 75               791 	mov	a,#0x75
   01C7 F0                  792 	movx	@dptr,a
   01C8 90s00r4C            793 	mov	dptr,#(_x + 0x004c)
   01CB 74 0B               794 	mov	a,#0x0B
   01CD F0                  795 	movx	@dptr,a
   01CE 90s00r4D            796 	mov	dptr,#(_x + 0x004d)
   01D1 74 91               797 	mov	a,#0x91
   01D3 F0                  798 	movx	@dptr,a
   01D4 90s00r4E            799 	mov	dptr,#(_x + 0x004e)
   01D7 74 92               800 	mov	a,#0x92
   01D9 F0                  801 	movx	@dptr,a
   01DA 90s00r4F            802 	mov	dptr,#(_x + 0x004f)
   01DD 74 14               803 	mov	a,#0x14
   01DF F0                  804 	movx	@dptr,a
   01E0 90s00r50            805 	mov	dptr,#(_x + 0x0050)
   01E3 74 7E               806 	mov	a,#0x7E
   01E5 F0                  807 	movx	@dptr,a
   01E6 90s00r51            808 	mov	dptr,#(_x + 0x0051)
   01E9 74 D8               809 	mov	a,#0xD8
   01EB F0                  810 	movx	@dptr,a
   01EC 90s00r52            811 	mov	dptr,#(_x + 0x0052)
   01EF 74 B8               812 	mov	a,#0xB8
   01F1 F0                  813 	movx	@dptr,a
   01F2 90s00r53            814 	mov	dptr,#(_x + 0x0053)
   01F5 74 A7               815 	mov	a,#0xA7
   01F7 F0                  816 	movx	@dptr,a
   01F8 90s00r54            817 	mov	dptr,#(_x + 0x0054)
   01FB 74 05               818 	mov	a,#0x05
   01FD F0                  819 	movx	@dptr,a
   01FE 90s00r55            820 	mov	dptr,#(_x + 0x0055)
   0201 74 95               821 	mov	a,#0x95
   0203 F0                  822 	movx	@dptr,a
   0204 90s00r56            823 	mov	dptr,#(_x + 0x0056)
   0207 74 D0               824 	mov	a,#0xD0
   0209 F0                  825 	movx	@dptr,a
   020A 90s00r57            826 	mov	dptr,#(_x + 0x0057)
   020D 74 55               827 	mov	a,#0x55
   020F F0                  828 	movx	@dptr,a
   0210 90s00r58            829 	mov	dptr,#(_x + 0x0058)
   0213 74 97               830 	mov	a,#0x97
   0215 F0                  831 	movx	@dptr,a
   0216 90s00r59            832 	mov	dptr,#(_x + 0x0059)
   0219 74 30               833 	mov	a,#0x30
   021B F0                  834 	movx	@dptr,a
   021C 90s00r5A            835 	mov	dptr,#(_x + 0x005a)
   021F 74 78               836 	mov	a,#0x78
   0221 F0                  837 	movx	@dptr,a
   0222 90s00r5B            838 	mov	dptr,#(_x + 0x005b)
   0225 74 41               839 	mov	a,#0x41
   0227 F0                  840 	movx	@dptr,a
   0228 90s00r5C            841 	mov	dptr,#(_x + 0x005c)
   022B 74 81               842 	mov	a,#0x81
   022D F0                  843 	movx	@dptr,a
   022E 90s00r5D            844 	mov	dptr,#(_x + 0x005d)
   0231 74 EF               845 	mov	a,#0xEF
   0233 F0                  846 	movx	@dptr,a
   0234 90s00r5E            847 	mov	dptr,#(_x + 0x005e)
   0237 74 C6               848 	mov	a,#0xC6
   0239 F0                  849 	movx	@dptr,a
   023A 90s00r5F            850 	mov	dptr,#(_x + 0x005f)
   023D 74 64               851 	mov	a,#0x64
   023F F0                  852 	movx	@dptr,a
   0240 90s00r60            853 	mov	dptr,#(_x + 0x0060)
   0243 74 9F               854 	mov	a,#0x9F
   0245 F0                  855 	movx	@dptr,a
   0246 90s00r61            856 	mov	dptr,#(_x + 0x0061)
   0249 74 4A               857 	mov	a,#0x4A
   024B F0                  858 	movx	@dptr,a
   024C 90s00r62            859 	mov	dptr,#(_x + 0x0062)
   024F 74 9C               860 	mov	a,#0x9C
   0251 F0                  861 	movx	@dptr,a
   0252 90s00r63            862 	mov	dptr,#(_x + 0x0063)
   0255 74 4A               863 	mov	a,#0x4A
   0257 F0                  864 	movx	@dptr,a
   0258 90s00r64            865 	mov	dptr,#(_x + 0x0064)
   025B 74 3A               866 	mov	a,#0x3A
   025D F0                  867 	movx	@dptr,a
   025E 90s00r65            868 	mov	dptr,#(_x + 0x0065)
   0261 74 0B               869 	mov	a,#0x0B
   0263 F0                  870 	movx	@dptr,a
   0264 90s00r66            871 	mov	dptr,#(_x + 0x0066)
   0267 74 CA               872 	mov	a,#0xCA
   0269 F0                  873 	movx	@dptr,a
   026A 90s00r67            874 	mov	dptr,#(_x + 0x0067)
   026D 74 D8               875 	mov	a,#0xD8
   026F F0                  876 	movx	@dptr,a
   0270 90s00r68            877 	mov	dptr,#(_x + 0x0068)
   0273 74 9C               878 	mov	a,#0x9C
   0275 F0                  879 	movx	@dptr,a
   0276 90s00r69            880 	mov	dptr,#(_x + 0x0069)
   0279 74 1A               881 	mov	a,#0x1A
   027B F0                  882 	movx	@dptr,a
   027C 90s00r6A            883 	mov	dptr,#(_x + 0x006a)
   027F 74 64               884 	mov	a,#0x64
   0281 F0                  885 	movx	@dptr,a
   0282 90s00r6B            886 	mov	dptr,#(_x + 0x006b)
   0285 74 A7               887 	mov	a,#0xA7
   0287 F0                  888 	movx	@dptr,a
   0288 90s00r6C            889 	mov	dptr,#(_x + 0x006c)
   028B 74 A9               890 	mov	a,#0xA9
   028D F0                  891 	movx	@dptr,a
   028E 90s00r6D            892 	mov	dptr,#(_x + 0x006d)
   0291 74 6E               893 	mov	a,#0x6E
   0293 F0                  894 	movx	@dptr,a
   0294 90s00r6E            895 	mov	dptr,#(_x + 0x006e)
   0297 74 C8               896 	mov	a,#0xC8
   0299 F0                  897 	movx	@dptr,a
   029A 90s00r6F            898 	mov	dptr,#(_x + 0x006f)
   029D 74 0A               899 	mov	a,#0x0A
   029F F0                  900 	movx	@dptr,a
   02A0 90s00r70            901 	mov	dptr,#(_x + 0x0070)
   02A3 74 E5               902 	mov	a,#0xE5
   02A5 F0                  903 	movx	@dptr,a
   02A6 90s00r71            904 	mov	dptr,#(_x + 0x0071)
   02A9 74 CE               905 	mov	a,#0xCE
   02AB F0                  906 	movx	@dptr,a
   02AC 90s00r72            907 	mov	dptr,#(_x + 0x0072)
   02AF 74 E2               908 	mov	a,#0xE2
   02B1 F0                  909 	movx	@dptr,a
   02B2 90s00r73            910 	mov	dptr,#(_x + 0x0073)
   02B5 74 3B               911 	mov	a,#0x3B
   02B7 F0                  912 	movx	@dptr,a
   02B8 90s00r74            913 	mov	dptr,#(_x + 0x0074)
   02BB 74 73               914 	mov	a,#0x73
   02BD F0                  915 	movx	@dptr,a
   02BE 90s00r75            916 	mov	dptr,#(_x + 0x0075)
   02C1 74 8A               917 	mov	a,#0x8A
   02C3 F0                  918 	movx	@dptr,a
   02C4 90s00r76            919 	mov	dptr,#(_x + 0x0076)
   02C7 74 EF               920 	mov	a,#0xEF
   02C9 F0                  921 	movx	@dptr,a
   02CA 90s00r77            922 	mov	dptr,#(_x + 0x0077)
   02CD 74 F0               923 	mov	a,#0xF0
   02CF F0                  924 	movx	@dptr,a
   02D0 90s00r78            925 	mov	dptr,#(_x + 0x0078)
   02D3 74 E4               926 	mov	a,#0xE4
   02D5 F0                  927 	movx	@dptr,a
   02D6 90s00r79            928 	mov	dptr,#(_x + 0x0079)
   02D9 74 A6               929 	mov	a,#0xA6
   02DB F0                  930 	movx	@dptr,a
   02DC 90s00r7A            931 	mov	dptr,#(_x + 0x007a)
   02DF 74 40               932 	mov	a,#0x40
   02E1 F0                  933 	movx	@dptr,a
   02E2 90s00r7B            934 	mov	dptr,#(_x + 0x007b)
   02E5 74 26               935 	mov	a,#0x26
   02E7 F0                  936 	movx	@dptr,a
   02E8 90s00r7C            937 	mov	dptr,#(_x + 0x007c)
   02EB 74 F3               938 	mov	a,#0xF3
   02ED F0                  939 	movx	@dptr,a
   02EE 90s00r7D            940 	mov	dptr,#(_x + 0x007d)
   02F1 74 D9               941 	mov	a,#0xD9
   02F3 F0                  942 	movx	@dptr,a
   02F4 90s00r7E            943 	mov	dptr,#(_x + 0x007e)
   02F7 74 50               944 	mov	a,#0x50
   02F9 F0                  945 	movx	@dptr,a
   02FA 90s00r7F            946 	mov	dptr,#(_x + 0x007f)
   02FD 74 1F               947 	mov	a,#0x1F
   02FF F0                  948 	movx	@dptr,a
                    0300    949 	G$main$0$0 ==.
                    0300    950 	C$main.c$25$1$1 ==.
                            951 ;	main.c:25: volatile __xdata __at (0x0080) unsigned char y[SIZE] = {0xBD,0xAA,0x18,0x4C,0xCD,0x5C,0x95,0x35,0x5B,0xA2,0x9D,0xC0,0xEB,0xE2,0x8A,0xC6,0xBF,0xDF,0xA1,0x88,0x1B,0x8C,0x58,0xE3,0xB0,0xD8,0xF8,0xC6,0xB6,0x01,0x96,0xE2,0xE0,0x52,0x01,0x0B,0x3A,0xFF,0x65,0x48,0xE0,0x67,0xCD,0x9E,0x1E,0x6A,0xA4,0xFC,0x04,0xC5,0x7B,0x1C,0xF0,0x2B,0xD1,0x4E,0x62,0xFB,0x36,0x68,0xB9,0x70,0xC8,0x98,0x0C,0x8A,0x65,0x3C,0xD1,0x15,0x2B,0x13,0xCA,0x5A,0xB7,0xBA,0xFC,0x15,0x37,0x11,0x6C,0xF3,0x93,0x85,0x9B,0x1E,0xE8,0x28,0x44,0x4B,0xFB,0x6A,0xFD,0xEC,0xC9,0xCB,0xC9,0x07,0x28,0x2B,0x96,0xE0,0xF9,0xA5,0x8C,0x35,0x62,0xCC,0xAB,0xB9,0xF3,0xA2,0xA9,0x4D,0x24,0x07,0x16,0x87,0xF4,0x31,0xBB,0xBC,0x6D,0x0A,0x88,0xE5,0x47,0x7D};
   0300 90s00r80            952 	mov	dptr,#_y
   0303 74 BD               953 	mov	a,#0xBD
   0305 F0                  954 	movx	@dptr,a
   0306 90s00r81            955 	mov	dptr,#(_y + 0x0001)
   0309 74 AA               956 	mov	a,#0xAA
   030B F0                  957 	movx	@dptr,a
   030C 90s00r82            958 	mov	dptr,#(_y + 0x0002)
   030F 74 18               959 	mov	a,#0x18
   0311 F0                  960 	movx	@dptr,a
   0312 90s00r83            961 	mov	dptr,#(_y + 0x0003)
   0315 74 4C               962 	mov	a,#0x4C
   0317 F0                  963 	movx	@dptr,a
   0318 90s00r84            964 	mov	dptr,#(_y + 0x0004)
   031B 74 CD               965 	mov	a,#0xCD
   031D F0                  966 	movx	@dptr,a
   031E 90s00r85            967 	mov	dptr,#(_y + 0x0005)
   0321 74 5C               968 	mov	a,#0x5C
   0323 F0                  969 	movx	@dptr,a
   0324 90s00r86            970 	mov	dptr,#(_y + 0x0006)
   0327 74 95               971 	mov	a,#0x95
   0329 F0                  972 	movx	@dptr,a
   032A 90s00r87            973 	mov	dptr,#(_y + 0x0007)
   032D 74 35               974 	mov	a,#0x35
   032F F0                  975 	movx	@dptr,a
   0330 90s00r88            976 	mov	dptr,#(_y + 0x0008)
   0333 74 5B               977 	mov	a,#0x5B
   0335 F0                  978 	movx	@dptr,a
   0336 90s00r89            979 	mov	dptr,#(_y + 0x0009)
   0339 74 A2               980 	mov	a,#0xA2
   033B F0                  981 	movx	@dptr,a
   033C 90s00r8A            982 	mov	dptr,#(_y + 0x000a)
   033F 74 9D               983 	mov	a,#0x9D
   0341 F0                  984 	movx	@dptr,a
   0342 90s00r8B            985 	mov	dptr,#(_y + 0x000b)
   0345 74 C0               986 	mov	a,#0xC0
   0347 F0                  987 	movx	@dptr,a
   0348 90s00r8C            988 	mov	dptr,#(_y + 0x000c)
   034B 74 EB               989 	mov	a,#0xEB
   034D F0                  990 	movx	@dptr,a
   034E 90s00r8D            991 	mov	dptr,#(_y + 0x000d)
   0351 74 E2               992 	mov	a,#0xE2
   0353 F0                  993 	movx	@dptr,a
   0354 90s00r8E            994 	mov	dptr,#(_y + 0x000e)
   0357 74 8A               995 	mov	a,#0x8A
   0359 F0                  996 	movx	@dptr,a
   035A 90s00r8F            997 	mov	dptr,#(_y + 0x000f)
   035D 74 C6               998 	mov	a,#0xC6
   035F F0                  999 	movx	@dptr,a
   0360 90s00r90           1000 	mov	dptr,#(_y + 0x0010)
   0363 74 BF              1001 	mov	a,#0xBF
   0365 F0                 1002 	movx	@dptr,a
   0366 90s00r91           1003 	mov	dptr,#(_y + 0x0011)
   0369 74 DF              1004 	mov	a,#0xDF
   036B F0                 1005 	movx	@dptr,a
   036C 90s00r92           1006 	mov	dptr,#(_y + 0x0012)
   036F 74 A1              1007 	mov	a,#0xA1
   0371 F0                 1008 	movx	@dptr,a
   0372 90s00r93           1009 	mov	dptr,#(_y + 0x0013)
   0375 74 88              1010 	mov	a,#0x88
   0377 F0                 1011 	movx	@dptr,a
   0378 90s00r94           1012 	mov	dptr,#(_y + 0x0014)
   037B 74 1B              1013 	mov	a,#0x1B
   037D F0                 1014 	movx	@dptr,a
   037E 90s00r95           1015 	mov	dptr,#(_y + 0x0015)
   0381 74 8C              1016 	mov	a,#0x8C
   0383 F0                 1017 	movx	@dptr,a
   0384 90s00r96           1018 	mov	dptr,#(_y + 0x0016)
   0387 74 58              1019 	mov	a,#0x58
   0389 F0                 1020 	movx	@dptr,a
   038A 90s00r97           1021 	mov	dptr,#(_y + 0x0017)
   038D 74 E3              1022 	mov	a,#0xE3
   038F F0                 1023 	movx	@dptr,a
   0390 90s00r98           1024 	mov	dptr,#(_y + 0x0018)
   0393 74 B0              1025 	mov	a,#0xB0
   0395 F0                 1026 	movx	@dptr,a
   0396 90s00r99           1027 	mov	dptr,#(_y + 0x0019)
   0399 74 D8              1028 	mov	a,#0xD8
   039B F0                 1029 	movx	@dptr,a
   039C 90s00r9A           1030 	mov	dptr,#(_y + 0x001a)
   039F 74 F8              1031 	mov	a,#0xF8
   03A1 F0                 1032 	movx	@dptr,a
   03A2 90s00r9B           1033 	mov	dptr,#(_y + 0x001b)
   03A5 74 C6              1034 	mov	a,#0xC6
   03A7 F0                 1035 	movx	@dptr,a
   03A8 90s00r9C           1036 	mov	dptr,#(_y + 0x001c)
   03AB 74 B6              1037 	mov	a,#0xB6
   03AD F0                 1038 	movx	@dptr,a
   03AE 90s00r9D           1039 	mov	dptr,#(_y + 0x001d)
   03B1 74 01              1040 	mov	a,#0x01
   03B3 F0                 1041 	movx	@dptr,a
   03B4 90s00r9E           1042 	mov	dptr,#(_y + 0x001e)
   03B7 74 96              1043 	mov	a,#0x96
   03B9 F0                 1044 	movx	@dptr,a
   03BA 90s00r9F           1045 	mov	dptr,#(_y + 0x001f)
   03BD 74 E2              1046 	mov	a,#0xE2
   03BF F0                 1047 	movx	@dptr,a
   03C0 90s00rA0           1048 	mov	dptr,#(_y + 0x0020)
   03C3 74 E0              1049 	mov	a,#0xE0
   03C5 F0                 1050 	movx	@dptr,a
   03C6 90s00rA1           1051 	mov	dptr,#(_y + 0x0021)
   03C9 74 52              1052 	mov	a,#0x52
   03CB F0                 1053 	movx	@dptr,a
   03CC 90s00rA2           1054 	mov	dptr,#(_y + 0x0022)
   03CF 74 01              1055 	mov	a,#0x01
   03D1 F0                 1056 	movx	@dptr,a
   03D2 90s00rA3           1057 	mov	dptr,#(_y + 0x0023)
   03D5 74 0B              1058 	mov	a,#0x0B
   03D7 F0                 1059 	movx	@dptr,a
   03D8 90s00rA4           1060 	mov	dptr,#(_y + 0x0024)
   03DB 74 3A              1061 	mov	a,#0x3A
   03DD F0                 1062 	movx	@dptr,a
   03DE 90s00rA5           1063 	mov	dptr,#(_y + 0x0025)
   03E1 74 FF              1064 	mov	a,#0xFF
   03E3 F0                 1065 	movx	@dptr,a
   03E4 90s00rA6           1066 	mov	dptr,#(_y + 0x0026)
   03E7 74 65              1067 	mov	a,#0x65
   03E9 F0                 1068 	movx	@dptr,a
   03EA 90s00rA7           1069 	mov	dptr,#(_y + 0x0027)
   03ED 74 48              1070 	mov	a,#0x48
   03EF F0                 1071 	movx	@dptr,a
   03F0 90s00rA8           1072 	mov	dptr,#(_y + 0x0028)
   03F3 74 E0              1073 	mov	a,#0xE0
   03F5 F0                 1074 	movx	@dptr,a
   03F6 90s00rA9           1075 	mov	dptr,#(_y + 0x0029)
   03F9 74 67              1076 	mov	a,#0x67
   03FB F0                 1077 	movx	@dptr,a
   03FC 90s00rAA           1078 	mov	dptr,#(_y + 0x002a)
   03FF 74 CD              1079 	mov	a,#0xCD
   0401 F0                 1080 	movx	@dptr,a
   0402 90s00rAB           1081 	mov	dptr,#(_y + 0x002b)
   0405 74 9E              1082 	mov	a,#0x9E
   0407 F0                 1083 	movx	@dptr,a
   0408 90s00rAC           1084 	mov	dptr,#(_y + 0x002c)
   040B 74 1E              1085 	mov	a,#0x1E
   040D F0                 1086 	movx	@dptr,a
   040E 90s00rAD           1087 	mov	dptr,#(_y + 0x002d)
   0411 74 6A              1088 	mov	a,#0x6A
   0413 F0                 1089 	movx	@dptr,a
   0414 90s00rAE           1090 	mov	dptr,#(_y + 0x002e)
   0417 74 A4              1091 	mov	a,#0xA4
   0419 F0                 1092 	movx	@dptr,a
   041A 90s00rAF           1093 	mov	dptr,#(_y + 0x002f)
   041D 74 FC              1094 	mov	a,#0xFC
   041F F0                 1095 	movx	@dptr,a
   0420 90s00rB0           1096 	mov	dptr,#(_y + 0x0030)
   0423 74 04              1097 	mov	a,#0x04
   0425 F0                 1098 	movx	@dptr,a
   0426 90s00rB1           1099 	mov	dptr,#(_y + 0x0031)
   0429 74 C5              1100 	mov	a,#0xC5
   042B F0                 1101 	movx	@dptr,a
   042C 90s00rB2           1102 	mov	dptr,#(_y + 0x0032)
   042F 74 7B              1103 	mov	a,#0x7B
   0431 F0                 1104 	movx	@dptr,a
   0432 90s00rB3           1105 	mov	dptr,#(_y + 0x0033)
   0435 74 1C              1106 	mov	a,#0x1C
   0437 F0                 1107 	movx	@dptr,a
   0438 90s00rB4           1108 	mov	dptr,#(_y + 0x0034)
   043B 74 F0              1109 	mov	a,#0xF0
   043D F0                 1110 	movx	@dptr,a
   043E 90s00rB5           1111 	mov	dptr,#(_y + 0x0035)
   0441 74 2B              1112 	mov	a,#0x2B
   0443 F0                 1113 	movx	@dptr,a
   0444 90s00rB6           1114 	mov	dptr,#(_y + 0x0036)
   0447 74 D1              1115 	mov	a,#0xD1
   0449 F0                 1116 	movx	@dptr,a
   044A 90s00rB7           1117 	mov	dptr,#(_y + 0x0037)
   044D 74 4E              1118 	mov	a,#0x4E
   044F F0                 1119 	movx	@dptr,a
   0450 90s00rB8           1120 	mov	dptr,#(_y + 0x0038)
   0453 74 62              1121 	mov	a,#0x62
   0455 F0                 1122 	movx	@dptr,a
   0456 90s00rB9           1123 	mov	dptr,#(_y + 0x0039)
   0459 74 FB              1124 	mov	a,#0xFB
   045B F0                 1125 	movx	@dptr,a
   045C 90s00rBA           1126 	mov	dptr,#(_y + 0x003a)
   045F 74 36              1127 	mov	a,#0x36
   0461 F0                 1128 	movx	@dptr,a
   0462 90s00rBB           1129 	mov	dptr,#(_y + 0x003b)
   0465 74 68              1130 	mov	a,#0x68
   0467 F0                 1131 	movx	@dptr,a
   0468 90s00rBC           1132 	mov	dptr,#(_y + 0x003c)
   046B 74 B9              1133 	mov	a,#0xB9
   046D F0                 1134 	movx	@dptr,a
   046E 90s00rBD           1135 	mov	dptr,#(_y + 0x003d)
   0471 74 70              1136 	mov	a,#0x70
   0473 F0                 1137 	movx	@dptr,a
   0474 90s00rBE           1138 	mov	dptr,#(_y + 0x003e)
   0477 74 C8              1139 	mov	a,#0xC8
   0479 F0                 1140 	movx	@dptr,a
   047A 90s00rBF           1141 	mov	dptr,#(_y + 0x003f)
   047D 74 98              1142 	mov	a,#0x98
   047F F0                 1143 	movx	@dptr,a
   0480 90s00rC0           1144 	mov	dptr,#(_y + 0x0040)
   0483 74 0C              1145 	mov	a,#0x0C
   0485 F0                 1146 	movx	@dptr,a
   0486 90s00rC1           1147 	mov	dptr,#(_y + 0x0041)
   0489 74 8A              1148 	mov	a,#0x8A
   048B F0                 1149 	movx	@dptr,a
   048C 90s00rC2           1150 	mov	dptr,#(_y + 0x0042)
   048F 74 65              1151 	mov	a,#0x65
   0491 F0                 1152 	movx	@dptr,a
   0492 90s00rC3           1153 	mov	dptr,#(_y + 0x0043)
   0495 74 3C              1154 	mov	a,#0x3C
   0497 F0                 1155 	movx	@dptr,a
   0498 90s00rC4           1156 	mov	dptr,#(_y + 0x0044)
   049B 74 D1              1157 	mov	a,#0xD1
   049D F0                 1158 	movx	@dptr,a
   049E 90s00rC5           1159 	mov	dptr,#(_y + 0x0045)
   04A1 74 15              1160 	mov	a,#0x15
   04A3 F0                 1161 	movx	@dptr,a
   04A4 90s00rC6           1162 	mov	dptr,#(_y + 0x0046)
   04A7 74 2B              1163 	mov	a,#0x2B
   04A9 F0                 1164 	movx	@dptr,a
   04AA 90s00rC7           1165 	mov	dptr,#(_y + 0x0047)
   04AD 74 13              1166 	mov	a,#0x13
   04AF F0                 1167 	movx	@dptr,a
   04B0 90s00rC8           1168 	mov	dptr,#(_y + 0x0048)
   04B3 74 CA              1169 	mov	a,#0xCA
   04B5 F0                 1170 	movx	@dptr,a
   04B6 90s00rC9           1171 	mov	dptr,#(_y + 0x0049)
   04B9 74 5A              1172 	mov	a,#0x5A
   04BB F0                 1173 	movx	@dptr,a
   04BC 90s00rCA           1174 	mov	dptr,#(_y + 0x004a)
   04BF 74 B7              1175 	mov	a,#0xB7
   04C1 F0                 1176 	movx	@dptr,a
   04C2 90s00rCB           1177 	mov	dptr,#(_y + 0x004b)
   04C5 74 BA              1178 	mov	a,#0xBA
   04C7 F0                 1179 	movx	@dptr,a
   04C8 90s00rCC           1180 	mov	dptr,#(_y + 0x004c)
   04CB 74 FC              1181 	mov	a,#0xFC
   04CD F0                 1182 	movx	@dptr,a
   04CE 90s00rCD           1183 	mov	dptr,#(_y + 0x004d)
   04D1 74 15              1184 	mov	a,#0x15
   04D3 F0                 1185 	movx	@dptr,a
   04D4 90s00rCE           1186 	mov	dptr,#(_y + 0x004e)
   04D7 74 37              1187 	mov	a,#0x37
   04D9 F0                 1188 	movx	@dptr,a
   04DA 90s00rCF           1189 	mov	dptr,#(_y + 0x004f)
   04DD 74 11              1190 	mov	a,#0x11
   04DF F0                 1191 	movx	@dptr,a
   04E0 90s00rD0           1192 	mov	dptr,#(_y + 0x0050)
   04E3 74 6C              1193 	mov	a,#0x6C
   04E5 F0                 1194 	movx	@dptr,a
   04E6 90s00rD1           1195 	mov	dptr,#(_y + 0x0051)
   04E9 74 F3              1196 	mov	a,#0xF3
   04EB F0                 1197 	movx	@dptr,a
   04EC 90s00rD2           1198 	mov	dptr,#(_y + 0x0052)
   04EF 74 93              1199 	mov	a,#0x93
   04F1 F0                 1200 	movx	@dptr,a
   04F2 90s00rD3           1201 	mov	dptr,#(_y + 0x0053)
   04F5 74 85              1202 	mov	a,#0x85
   04F7 F0                 1203 	movx	@dptr,a
   04F8 90s00rD4           1204 	mov	dptr,#(_y + 0x0054)
   04FB 74 9B              1205 	mov	a,#0x9B
   04FD F0                 1206 	movx	@dptr,a
   04FE 90s00rD5           1207 	mov	dptr,#(_y + 0x0055)
   0501 74 1E              1208 	mov	a,#0x1E
   0503 F0                 1209 	movx	@dptr,a
   0504 90s00rD6           1210 	mov	dptr,#(_y + 0x0056)
   0507 74 E8              1211 	mov	a,#0xE8
   0509 F0                 1212 	movx	@dptr,a
   050A 90s00rD7           1213 	mov	dptr,#(_y + 0x0057)
   050D 74 28              1214 	mov	a,#0x28
   050F F0                 1215 	movx	@dptr,a
   0510 90s00rD8           1216 	mov	dptr,#(_y + 0x0058)
   0513 74 44              1217 	mov	a,#0x44
   0515 F0                 1218 	movx	@dptr,a
   0516 90s00rD9           1219 	mov	dptr,#(_y + 0x0059)
   0519 74 4B              1220 	mov	a,#0x4B
   051B F0                 1221 	movx	@dptr,a
   051C 90s00rDA           1222 	mov	dptr,#(_y + 0x005a)
   051F 74 FB              1223 	mov	a,#0xFB
   0521 F0                 1224 	movx	@dptr,a
   0522 90s00rDB           1225 	mov	dptr,#(_y + 0x005b)
   0525 74 6A              1226 	mov	a,#0x6A
   0527 F0                 1227 	movx	@dptr,a
   0528 90s00rDC           1228 	mov	dptr,#(_y + 0x005c)
   052B 74 FD              1229 	mov	a,#0xFD
   052D F0                 1230 	movx	@dptr,a
   052E 90s00rDD           1231 	mov	dptr,#(_y + 0x005d)
   0531 74 EC              1232 	mov	a,#0xEC
   0533 F0                 1233 	movx	@dptr,a
   0534 90s00rDE           1234 	mov	dptr,#(_y + 0x005e)
   0537 74 C9              1235 	mov	a,#0xC9
   0539 F0                 1236 	movx	@dptr,a
   053A 90s00rDF           1237 	mov	dptr,#(_y + 0x005f)
   053D 74 CB              1238 	mov	a,#0xCB
   053F F0                 1239 	movx	@dptr,a
   0540 90s00rE0           1240 	mov	dptr,#(_y + 0x0060)
   0543 74 C9              1241 	mov	a,#0xC9
   0545 F0                 1242 	movx	@dptr,a
   0546 90s00rE1           1243 	mov	dptr,#(_y + 0x0061)
   0549 74 07              1244 	mov	a,#0x07
   054B F0                 1245 	movx	@dptr,a
   054C 90s00rE2           1246 	mov	dptr,#(_y + 0x0062)
   054F 74 28              1247 	mov	a,#0x28
   0551 F0                 1248 	movx	@dptr,a
   0552 90s00rE3           1249 	mov	dptr,#(_y + 0x0063)
   0555 74 2B              1250 	mov	a,#0x2B
   0557 F0                 1251 	movx	@dptr,a
   0558 90s00rE4           1252 	mov	dptr,#(_y + 0x0064)
   055B 74 96              1253 	mov	a,#0x96
   055D F0                 1254 	movx	@dptr,a
   055E 90s00rE5           1255 	mov	dptr,#(_y + 0x0065)
   0561 74 E0              1256 	mov	a,#0xE0
   0563 F0                 1257 	movx	@dptr,a
   0564 90s00rE6           1258 	mov	dptr,#(_y + 0x0066)
   0567 74 F9              1259 	mov	a,#0xF9
   0569 F0                 1260 	movx	@dptr,a
   056A 90s00rE7           1261 	mov	dptr,#(_y + 0x0067)
   056D 74 A5              1262 	mov	a,#0xA5
   056F F0                 1263 	movx	@dptr,a
   0570 90s00rE8           1264 	mov	dptr,#(_y + 0x0068)
   0573 74 8C              1265 	mov	a,#0x8C
   0575 F0                 1266 	movx	@dptr,a
   0576 90s00rE9           1267 	mov	dptr,#(_y + 0x0069)
   0579 74 35              1268 	mov	a,#0x35
   057B F0                 1269 	movx	@dptr,a
   057C 90s00rEA           1270 	mov	dptr,#(_y + 0x006a)
   057F 74 62              1271 	mov	a,#0x62
   0581 F0                 1272 	movx	@dptr,a
   0582 90s00rEB           1273 	mov	dptr,#(_y + 0x006b)
   0585 74 CC              1274 	mov	a,#0xCC
   0587 F0                 1275 	movx	@dptr,a
   0588 90s00rEC           1276 	mov	dptr,#(_y + 0x006c)
   058B 74 AB              1277 	mov	a,#0xAB
   058D F0                 1278 	movx	@dptr,a
   058E 90s00rED           1279 	mov	dptr,#(_y + 0x006d)
   0591 74 B9              1280 	mov	a,#0xB9
   0593 F0                 1281 	movx	@dptr,a
   0594 90s00rEE           1282 	mov	dptr,#(_y + 0x006e)
   0597 74 F3              1283 	mov	a,#0xF3
   0599 F0                 1284 	movx	@dptr,a
   059A 90s00rEF           1285 	mov	dptr,#(_y + 0x006f)
   059D 74 A2              1286 	mov	a,#0xA2
   059F F0                 1287 	movx	@dptr,a
   05A0 90s00rF0           1288 	mov	dptr,#(_y + 0x0070)
   05A3 74 A9              1289 	mov	a,#0xA9
   05A5 F0                 1290 	movx	@dptr,a
   05A6 90s00rF1           1291 	mov	dptr,#(_y + 0x0071)
   05A9 74 4D              1292 	mov	a,#0x4D
   05AB F0                 1293 	movx	@dptr,a
   05AC 90s00rF2           1294 	mov	dptr,#(_y + 0x0072)
   05AF 74 24              1295 	mov	a,#0x24
   05B1 F0                 1296 	movx	@dptr,a
   05B2 90s00rF3           1297 	mov	dptr,#(_y + 0x0073)
   05B5 74 07              1298 	mov	a,#0x07
   05B7 F0                 1299 	movx	@dptr,a
   05B8 90s00rF4           1300 	mov	dptr,#(_y + 0x0074)
   05BB 74 16              1301 	mov	a,#0x16
   05BD F0                 1302 	movx	@dptr,a
   05BE 90s00rF5           1303 	mov	dptr,#(_y + 0x0075)
   05C1 74 87              1304 	mov	a,#0x87
   05C3 F0                 1305 	movx	@dptr,a
   05C4 90s00rF6           1306 	mov	dptr,#(_y + 0x0076)
   05C7 74 F4              1307 	mov	a,#0xF4
   05C9 F0                 1308 	movx	@dptr,a
   05CA 90s00rF7           1309 	mov	dptr,#(_y + 0x0077)
   05CD 74 31              1310 	mov	a,#0x31
   05CF F0                 1311 	movx	@dptr,a
   05D0 90s00rF8           1312 	mov	dptr,#(_y + 0x0078)
   05D3 74 BB              1313 	mov	a,#0xBB
   05D5 F0                 1314 	movx	@dptr,a
   05D6 90s00rF9           1315 	mov	dptr,#(_y + 0x0079)
   05D9 74 BC              1316 	mov	a,#0xBC
   05DB F0                 1317 	movx	@dptr,a
   05DC 90s00rFA           1318 	mov	dptr,#(_y + 0x007a)
   05DF 74 6D              1319 	mov	a,#0x6D
   05E1 F0                 1320 	movx	@dptr,a
   05E2 90s00rFB           1321 	mov	dptr,#(_y + 0x007b)
   05E5 74 0A              1322 	mov	a,#0x0A
   05E7 F0                 1323 	movx	@dptr,a
   05E8 90s00rFC           1324 	mov	dptr,#(_y + 0x007c)
   05EB 74 88              1325 	mov	a,#0x88
   05ED F0                 1326 	movx	@dptr,a
   05EE 90s00rFD           1327 	mov	dptr,#(_y + 0x007d)
   05F1 74 E5              1328 	mov	a,#0xE5
   05F3 F0                 1329 	movx	@dptr,a
   05F4 90s00rFE           1330 	mov	dptr,#(_y + 0x007e)
   05F7 74 47              1331 	mov	a,#0x47
   05F9 F0                 1332 	movx	@dptr,a
   05FA 90s00rFF           1333 	mov	dptr,#(_y + 0x007f)
   05FD 74 7D              1334 	mov	a,#0x7D
   05FF F0                 1335 	movx	@dptr,a
                    0600   1336 	G$main$0$0 ==.
                    0600   1337 	C$main.c$27$1$1 ==.
                           1338 ;	main.c:27: volatile __xdata __at (0x0100) unsigned char m[SIZE] = {0x0D,0xD5,0x0F,0x26,0x8F,0x95,0xAD,0x59,0x24,0xA0,0xDA,0x8F,0xAE,0x27,0x9F,0xD4,0x7A,0xE7,0x7E,0xBF,0xDF,0x2D,0x12,0xDA,0x43,0x14,0x0F,0x20,0xFA,0x90,0x46,0xD5,0x39,0xF1,0xAA,0x90,0x02,0xE4,0xDC,0xA3,0x9C,0xA4,0xF2,0xFF,0x30,0xC1,0x14,0x22,0x7E,0x11,0xE3,0x77,0x00,0x1A,0xAD,0x50,0xE1,0x7B,0x91,0x4A,0x92,0x08,0x65,0x20,0x75,0x68,0x74,0xB3,0x65,0xB0,0x0C,0xC6,0x8B,0xC9,0x10,0xEF,0xC4,0x4E,0x45,0xAD,0xFA,0xD2,0x4F,0x06,0xEC,0x29,0x5C,0xF3,0xAA,0x97,0x82,0x70,0xB8,0x44,0x06,0x86,0xE0,0x67,0xFC,0x70,0x79,0xA4,0xF0,0xB3,0x0B,0x48,0xCD,0xF0,0x6C,0x6F,0x0B,0x8B,0x25,0x67,0x46,0x8F,0xEC,0xA4,0xC1,0xE3,0x6A,0x47,0x0D,0xEB,0xA3,0x81,0xB5,0xBA};
   0600 90s01r00           1339 	mov	dptr,#_m
   0603 74 0D              1340 	mov	a,#0x0D
   0605 F0                 1341 	movx	@dptr,a
   0606 90s01r01           1342 	mov	dptr,#(_m + 0x0001)
   0609 74 D5              1343 	mov	a,#0xD5
   060B F0                 1344 	movx	@dptr,a
   060C 90s01r02           1345 	mov	dptr,#(_m + 0x0002)
   060F 74 0F              1346 	mov	a,#0x0F
   0611 F0                 1347 	movx	@dptr,a
   0612 90s01r03           1348 	mov	dptr,#(_m + 0x0003)
   0615 74 26              1349 	mov	a,#0x26
   0617 F0                 1350 	movx	@dptr,a
   0618 90s01r04           1351 	mov	dptr,#(_m + 0x0004)
   061B 74 8F              1352 	mov	a,#0x8F
   061D F0                 1353 	movx	@dptr,a
   061E 90s01r05           1354 	mov	dptr,#(_m + 0x0005)
   0621 74 95              1355 	mov	a,#0x95
   0623 F0                 1356 	movx	@dptr,a
   0624 90s01r06           1357 	mov	dptr,#(_m + 0x0006)
   0627 74 AD              1358 	mov	a,#0xAD
   0629 F0                 1359 	movx	@dptr,a
   062A 90s01r07           1360 	mov	dptr,#(_m + 0x0007)
   062D 74 59              1361 	mov	a,#0x59
   062F F0                 1362 	movx	@dptr,a
   0630 90s01r08           1363 	mov	dptr,#(_m + 0x0008)
   0633 74 24              1364 	mov	a,#0x24
   0635 F0                 1365 	movx	@dptr,a
   0636 90s01r09           1366 	mov	dptr,#(_m + 0x0009)
   0639 74 A0              1367 	mov	a,#0xA0
   063B F0                 1368 	movx	@dptr,a
   063C 90s01r0A           1369 	mov	dptr,#(_m + 0x000a)
   063F 74 DA              1370 	mov	a,#0xDA
   0641 F0                 1371 	movx	@dptr,a
   0642 90s01r0B           1372 	mov	dptr,#(_m + 0x000b)
   0645 74 8F              1373 	mov	a,#0x8F
   0647 F0                 1374 	movx	@dptr,a
   0648 90s01r0C           1375 	mov	dptr,#(_m + 0x000c)
   064B 74 AE              1376 	mov	a,#0xAE
   064D F0                 1377 	movx	@dptr,a
   064E 90s01r0D           1378 	mov	dptr,#(_m + 0x000d)
   0651 74 27              1379 	mov	a,#0x27
   0653 F0                 1380 	movx	@dptr,a
   0654 90s01r0E           1381 	mov	dptr,#(_m + 0x000e)
   0657 74 9F              1382 	mov	a,#0x9F
   0659 F0                 1383 	movx	@dptr,a
   065A 90s01r0F           1384 	mov	dptr,#(_m + 0x000f)
   065D 74 D4              1385 	mov	a,#0xD4
   065F F0                 1386 	movx	@dptr,a
   0660 90s01r10           1387 	mov	dptr,#(_m + 0x0010)
   0663 74 7A              1388 	mov	a,#0x7A
   0665 F0                 1389 	movx	@dptr,a
   0666 90s01r11           1390 	mov	dptr,#(_m + 0x0011)
   0669 74 E7              1391 	mov	a,#0xE7
   066B F0                 1392 	movx	@dptr,a
   066C 90s01r12           1393 	mov	dptr,#(_m + 0x0012)
   066F 74 7E              1394 	mov	a,#0x7E
   0671 F0                 1395 	movx	@dptr,a
   0672 90s01r13           1396 	mov	dptr,#(_m + 0x0013)
   0675 74 BF              1397 	mov	a,#0xBF
   0677 F0                 1398 	movx	@dptr,a
   0678 90s01r14           1399 	mov	dptr,#(_m + 0x0014)
   067B 74 DF              1400 	mov	a,#0xDF
   067D F0                 1401 	movx	@dptr,a
   067E 90s01r15           1402 	mov	dptr,#(_m + 0x0015)
   0681 74 2D              1403 	mov	a,#0x2D
   0683 F0                 1404 	movx	@dptr,a
   0684 90s01r16           1405 	mov	dptr,#(_m + 0x0016)
   0687 74 12              1406 	mov	a,#0x12
   0689 F0                 1407 	movx	@dptr,a
   068A 90s01r17           1408 	mov	dptr,#(_m + 0x0017)
   068D 74 DA              1409 	mov	a,#0xDA
   068F F0                 1410 	movx	@dptr,a
   0690 90s01r18           1411 	mov	dptr,#(_m + 0x0018)
   0693 74 43              1412 	mov	a,#0x43
   0695 F0                 1413 	movx	@dptr,a
   0696 90s01r19           1414 	mov	dptr,#(_m + 0x0019)
   0699 74 14              1415 	mov	a,#0x14
   069B F0                 1416 	movx	@dptr,a
   069C 90s01r1A           1417 	mov	dptr,#(_m + 0x001a)
   069F 74 0F              1418 	mov	a,#0x0F
   06A1 F0                 1419 	movx	@dptr,a
   06A2 90s01r1B           1420 	mov	dptr,#(_m + 0x001b)
   06A5 74 20              1421 	mov	a,#0x20
   06A7 F0                 1422 	movx	@dptr,a
   06A8 90s01r1C           1423 	mov	dptr,#(_m + 0x001c)
   06AB 74 FA              1424 	mov	a,#0xFA
   06AD F0                 1425 	movx	@dptr,a
   06AE 90s01r1D           1426 	mov	dptr,#(_m + 0x001d)
   06B1 74 90              1427 	mov	a,#0x90
   06B3 F0                 1428 	movx	@dptr,a
   06B4 90s01r1E           1429 	mov	dptr,#(_m + 0x001e)
   06B7 74 46              1430 	mov	a,#0x46
   06B9 F0                 1431 	movx	@dptr,a
   06BA 90s01r1F           1432 	mov	dptr,#(_m + 0x001f)
   06BD 74 D5              1433 	mov	a,#0xD5
   06BF F0                 1434 	movx	@dptr,a
   06C0 90s01r20           1435 	mov	dptr,#(_m + 0x0020)
   06C3 74 39              1436 	mov	a,#0x39
   06C5 F0                 1437 	movx	@dptr,a
   06C6 90s01r21           1438 	mov	dptr,#(_m + 0x0021)
   06C9 74 F1              1439 	mov	a,#0xF1
   06CB F0                 1440 	movx	@dptr,a
   06CC 90s01r22           1441 	mov	dptr,#(_m + 0x0022)
   06CF 74 AA              1442 	mov	a,#0xAA
   06D1 F0                 1443 	movx	@dptr,a
   06D2 90s01r23           1444 	mov	dptr,#(_m + 0x0023)
   06D5 74 90              1445 	mov	a,#0x90
   06D7 F0                 1446 	movx	@dptr,a
   06D8 90s01r24           1447 	mov	dptr,#(_m + 0x0024)
   06DB 74 02              1448 	mov	a,#0x02
   06DD F0                 1449 	movx	@dptr,a
   06DE 90s01r25           1450 	mov	dptr,#(_m + 0x0025)
   06E1 74 E4              1451 	mov	a,#0xE4
   06E3 F0                 1452 	movx	@dptr,a
   06E4 90s01r26           1453 	mov	dptr,#(_m + 0x0026)
   06E7 74 DC              1454 	mov	a,#0xDC
   06E9 F0                 1455 	movx	@dptr,a
   06EA 90s01r27           1456 	mov	dptr,#(_m + 0x0027)
   06ED 74 A3              1457 	mov	a,#0xA3
   06EF F0                 1458 	movx	@dptr,a
   06F0 90s01r28           1459 	mov	dptr,#(_m + 0x0028)
   06F3 74 9C              1460 	mov	a,#0x9C
   06F5 F0                 1461 	movx	@dptr,a
   06F6 90s01r29           1462 	mov	dptr,#(_m + 0x0029)
   06F9 74 A4              1463 	mov	a,#0xA4
   06FB F0                 1464 	movx	@dptr,a
   06FC 90s01r2A           1465 	mov	dptr,#(_m + 0x002a)
   06FF 74 F2              1466 	mov	a,#0xF2
   0701 F0                 1467 	movx	@dptr,a
   0702 90s01r2B           1468 	mov	dptr,#(_m + 0x002b)
   0705 74 FF              1469 	mov	a,#0xFF
   0707 F0                 1470 	movx	@dptr,a
   0708 90s01r2C           1471 	mov	dptr,#(_m + 0x002c)
   070B 74 30              1472 	mov	a,#0x30
   070D F0                 1473 	movx	@dptr,a
   070E 90s01r2D           1474 	mov	dptr,#(_m + 0x002d)
   0711 74 C1              1475 	mov	a,#0xC1
   0713 F0                 1476 	movx	@dptr,a
   0714 90s01r2E           1477 	mov	dptr,#(_m + 0x002e)
   0717 74 14              1478 	mov	a,#0x14
   0719 F0                 1479 	movx	@dptr,a
   071A 90s01r2F           1480 	mov	dptr,#(_m + 0x002f)
   071D 74 22              1481 	mov	a,#0x22
   071F F0                 1482 	movx	@dptr,a
   0720 90s01r30           1483 	mov	dptr,#(_m + 0x0030)
   0723 74 7E              1484 	mov	a,#0x7E
   0725 F0                 1485 	movx	@dptr,a
   0726 90s01r31           1486 	mov	dptr,#(_m + 0x0031)
   0729 74 11              1487 	mov	a,#0x11
   072B F0                 1488 	movx	@dptr,a
   072C 90s01r32           1489 	mov	dptr,#(_m + 0x0032)
   072F 74 E3              1490 	mov	a,#0xE3
   0731 F0                 1491 	movx	@dptr,a
   0732 90s01r33           1492 	mov	dptr,#(_m + 0x0033)
   0735 74 77              1493 	mov	a,#0x77
   0737 F0                 1494 	movx	@dptr,a
   0738 90s01r34           1495 	mov	dptr,#(_m + 0x0034)
   073B E4                 1496 	clr	a
   073C F0                 1497 	movx	@dptr,a
   073D 90s01r35           1498 	mov	dptr,#(_m + 0x0035)
   0740 74 1A              1499 	mov	a,#0x1A
   0742 F0                 1500 	movx	@dptr,a
   0743 90s01r36           1501 	mov	dptr,#(_m + 0x0036)
   0746 74 AD              1502 	mov	a,#0xAD
   0748 F0                 1503 	movx	@dptr,a
   0749 90s01r37           1504 	mov	dptr,#(_m + 0x0037)
   074C 74 50              1505 	mov	a,#0x50
   074E F0                 1506 	movx	@dptr,a
   074F 90s01r38           1507 	mov	dptr,#(_m + 0x0038)
   0752 74 E1              1508 	mov	a,#0xE1
   0754 F0                 1509 	movx	@dptr,a
   0755 90s01r39           1510 	mov	dptr,#(_m + 0x0039)
   0758 74 7B              1511 	mov	a,#0x7B
   075A F0                 1512 	movx	@dptr,a
   075B 90s01r3A           1513 	mov	dptr,#(_m + 0x003a)
   075E 74 91              1514 	mov	a,#0x91
   0760 F0                 1515 	movx	@dptr,a
   0761 90s01r3B           1516 	mov	dptr,#(_m + 0x003b)
   0764 74 4A              1517 	mov	a,#0x4A
   0766 F0                 1518 	movx	@dptr,a
   0767 90s01r3C           1519 	mov	dptr,#(_m + 0x003c)
   076A 74 92              1520 	mov	a,#0x92
   076C F0                 1521 	movx	@dptr,a
   076D 90s01r3D           1522 	mov	dptr,#(_m + 0x003d)
   0770 74 08              1523 	mov	a,#0x08
   0772 F0                 1524 	movx	@dptr,a
   0773 90s01r3E           1525 	mov	dptr,#(_m + 0x003e)
   0776 74 65              1526 	mov	a,#0x65
   0778 F0                 1527 	movx	@dptr,a
   0779 90s01r3F           1528 	mov	dptr,#(_m + 0x003f)
   077C 74 20              1529 	mov	a,#0x20
   077E F0                 1530 	movx	@dptr,a
   077F 90s01r40           1531 	mov	dptr,#(_m + 0x0040)
   0782 74 75              1532 	mov	a,#0x75
   0784 F0                 1533 	movx	@dptr,a
   0785 90s01r41           1534 	mov	dptr,#(_m + 0x0041)
   0788 74 68              1535 	mov	a,#0x68
   078A F0                 1536 	movx	@dptr,a
   078B 90s01r42           1537 	mov	dptr,#(_m + 0x0042)
   078E 74 74              1538 	mov	a,#0x74
   0790 F0                 1539 	movx	@dptr,a
   0791 90s01r43           1540 	mov	dptr,#(_m + 0x0043)
   0794 74 B3              1541 	mov	a,#0xB3
   0796 F0                 1542 	movx	@dptr,a
   0797 90s01r44           1543 	mov	dptr,#(_m + 0x0044)
   079A 74 65              1544 	mov	a,#0x65
   079C F0                 1545 	movx	@dptr,a
   079D 90s01r45           1546 	mov	dptr,#(_m + 0x0045)
   07A0 74 B0              1547 	mov	a,#0xB0
   07A2 F0                 1548 	movx	@dptr,a
   07A3 90s01r46           1549 	mov	dptr,#(_m + 0x0046)
   07A6 74 0C              1550 	mov	a,#0x0C
   07A8 F0                 1551 	movx	@dptr,a
   07A9 90s01r47           1552 	mov	dptr,#(_m + 0x0047)
   07AC 74 C6              1553 	mov	a,#0xC6
   07AE F0                 1554 	movx	@dptr,a
   07AF 90s01r48           1555 	mov	dptr,#(_m + 0x0048)
   07B2 74 8B              1556 	mov	a,#0x8B
   07B4 F0                 1557 	movx	@dptr,a
   07B5 90s01r49           1558 	mov	dptr,#(_m + 0x0049)
   07B8 74 C9              1559 	mov	a,#0xC9
   07BA F0                 1560 	movx	@dptr,a
   07BB 90s01r4A           1561 	mov	dptr,#(_m + 0x004a)
   07BE 74 10              1562 	mov	a,#0x10
   07C0 F0                 1563 	movx	@dptr,a
   07C1 90s01r4B           1564 	mov	dptr,#(_m + 0x004b)
   07C4 74 EF              1565 	mov	a,#0xEF
   07C6 F0                 1566 	movx	@dptr,a
   07C7 90s01r4C           1567 	mov	dptr,#(_m + 0x004c)
   07CA 74 C4              1568 	mov	a,#0xC4
   07CC F0                 1569 	movx	@dptr,a
   07CD 90s01r4D           1570 	mov	dptr,#(_m + 0x004d)
   07D0 74 4E              1571 	mov	a,#0x4E
   07D2 F0                 1572 	movx	@dptr,a
   07D3 90s01r4E           1573 	mov	dptr,#(_m + 0x004e)
   07D6 74 45              1574 	mov	a,#0x45
   07D8 F0                 1575 	movx	@dptr,a
   07D9 90s01r4F           1576 	mov	dptr,#(_m + 0x004f)
   07DC 74 AD              1577 	mov	a,#0xAD
   07DE F0                 1578 	movx	@dptr,a
   07DF 90s01r50           1579 	mov	dptr,#(_m + 0x0050)
   07E2 74 FA              1580 	mov	a,#0xFA
   07E4 F0                 1581 	movx	@dptr,a
   07E5 90s01r51           1582 	mov	dptr,#(_m + 0x0051)
   07E8 74 D2              1583 	mov	a,#0xD2
   07EA F0                 1584 	movx	@dptr,a
   07EB 90s01r52           1585 	mov	dptr,#(_m + 0x0052)
   07EE 74 4F              1586 	mov	a,#0x4F
   07F0 F0                 1587 	movx	@dptr,a
   07F1 90s01r53           1588 	mov	dptr,#(_m + 0x0053)
   07F4 74 06              1589 	mov	a,#0x06
   07F6 F0                 1590 	movx	@dptr,a
   07F7 90s01r54           1591 	mov	dptr,#(_m + 0x0054)
   07FA 74 EC              1592 	mov	a,#0xEC
   07FC F0                 1593 	movx	@dptr,a
   07FD 90s01r55           1594 	mov	dptr,#(_m + 0x0055)
   0800 74 29              1595 	mov	a,#0x29
   0802 F0                 1596 	movx	@dptr,a
   0803 90s01r56           1597 	mov	dptr,#(_m + 0x0056)
   0806 74 5C              1598 	mov	a,#0x5C
   0808 F0                 1599 	movx	@dptr,a
   0809 90s01r57           1600 	mov	dptr,#(_m + 0x0057)
   080C 74 F3              1601 	mov	a,#0xF3
   080E F0                 1602 	movx	@dptr,a
   080F 90s01r58           1603 	mov	dptr,#(_m + 0x0058)
   0812 74 AA              1604 	mov	a,#0xAA
   0814 F0                 1605 	movx	@dptr,a
   0815 90s01r59           1606 	mov	dptr,#(_m + 0x0059)
   0818 74 97              1607 	mov	a,#0x97
   081A F0                 1608 	movx	@dptr,a
   081B 90s01r5A           1609 	mov	dptr,#(_m + 0x005a)
   081E 74 82              1610 	mov	a,#0x82
   0820 F0                 1611 	movx	@dptr,a
   0821 90s01r5B           1612 	mov	dptr,#(_m + 0x005b)
   0824 74 70              1613 	mov	a,#0x70
   0826 F0                 1614 	movx	@dptr,a
   0827 90s01r5C           1615 	mov	dptr,#(_m + 0x005c)
   082A 74 B8              1616 	mov	a,#0xB8
   082C F0                 1617 	movx	@dptr,a
   082D 90s01r5D           1618 	mov	dptr,#(_m + 0x005d)
   0830 74 44              1619 	mov	a,#0x44
   0832 F0                 1620 	movx	@dptr,a
   0833 90s01r5E           1621 	mov	dptr,#(_m + 0x005e)
   0836 74 06              1622 	mov	a,#0x06
   0838 F0                 1623 	movx	@dptr,a
   0839 90s01r5F           1624 	mov	dptr,#(_m + 0x005f)
   083C 74 86              1625 	mov	a,#0x86
   083E F0                 1626 	movx	@dptr,a
   083F 90s01r60           1627 	mov	dptr,#(_m + 0x0060)
   0842 74 E0              1628 	mov	a,#0xE0
   0844 F0                 1629 	movx	@dptr,a
   0845 90s01r61           1630 	mov	dptr,#(_m + 0x0061)
   0848 74 67              1631 	mov	a,#0x67
   084A F0                 1632 	movx	@dptr,a
   084B 90s01r62           1633 	mov	dptr,#(_m + 0x0062)
   084E 74 FC              1634 	mov	a,#0xFC
   0850 F0                 1635 	movx	@dptr,a
   0851 90s01r63           1636 	mov	dptr,#(_m + 0x0063)
   0854 74 70              1637 	mov	a,#0x70
   0856 F0                 1638 	movx	@dptr,a
   0857 90s01r64           1639 	mov	dptr,#(_m + 0x0064)
   085A 74 79              1640 	mov	a,#0x79
   085C F0                 1641 	movx	@dptr,a
   085D 90s01r65           1642 	mov	dptr,#(_m + 0x0065)
   0860 74 A4              1643 	mov	a,#0xA4
   0862 F0                 1644 	movx	@dptr,a
   0863 90s01r66           1645 	mov	dptr,#(_m + 0x0066)
   0866 74 F0              1646 	mov	a,#0xF0
   0868 F0                 1647 	movx	@dptr,a
   0869 90s01r67           1648 	mov	dptr,#(_m + 0x0067)
   086C 74 B3              1649 	mov	a,#0xB3
   086E F0                 1650 	movx	@dptr,a
   086F 90s01r68           1651 	mov	dptr,#(_m + 0x0068)
   0872 74 0B              1652 	mov	a,#0x0B
   0874 F0                 1653 	movx	@dptr,a
   0875 90s01r69           1654 	mov	dptr,#(_m + 0x0069)
   0878 74 48              1655 	mov	a,#0x48
   087A F0                 1656 	movx	@dptr,a
   087B 90s01r6A           1657 	mov	dptr,#(_m + 0x006a)
   087E 74 CD              1658 	mov	a,#0xCD
   0880 F0                 1659 	movx	@dptr,a
   0881 90s01r6B           1660 	mov	dptr,#(_m + 0x006b)
   0884 74 F0              1661 	mov	a,#0xF0
   0886 F0                 1662 	movx	@dptr,a
   0887 90s01r6C           1663 	mov	dptr,#(_m + 0x006c)
   088A 74 6C              1664 	mov	a,#0x6C
   088C F0                 1665 	movx	@dptr,a
   088D 90s01r6D           1666 	mov	dptr,#(_m + 0x006d)
   0890 74 6F              1667 	mov	a,#0x6F
   0892 F0                 1668 	movx	@dptr,a
   0893 90s01r6E           1669 	mov	dptr,#(_m + 0x006e)
   0896 74 0B              1670 	mov	a,#0x0B
   0898 F0                 1671 	movx	@dptr,a
   0899 90s01r6F           1672 	mov	dptr,#(_m + 0x006f)
   089C 74 8B              1673 	mov	a,#0x8B
   089E F0                 1674 	movx	@dptr,a
   089F 90s01r70           1675 	mov	dptr,#(_m + 0x0070)
   08A2 74 25              1676 	mov	a,#0x25
   08A4 F0                 1677 	movx	@dptr,a
   08A5 90s01r71           1678 	mov	dptr,#(_m + 0x0071)
   08A8 74 67              1679 	mov	a,#0x67
   08AA F0                 1680 	movx	@dptr,a
   08AB 90s01r72           1681 	mov	dptr,#(_m + 0x0072)
   08AE 74 46              1682 	mov	a,#0x46
   08B0 F0                 1683 	movx	@dptr,a
   08B1 90s01r73           1684 	mov	dptr,#(_m + 0x0073)
   08B4 74 8F              1685 	mov	a,#0x8F
   08B6 F0                 1686 	movx	@dptr,a
   08B7 90s01r74           1687 	mov	dptr,#(_m + 0x0074)
   08BA 74 EC              1688 	mov	a,#0xEC
   08BC F0                 1689 	movx	@dptr,a
   08BD 90s01r75           1690 	mov	dptr,#(_m + 0x0075)
   08C0 74 A4              1691 	mov	a,#0xA4
   08C2 F0                 1692 	movx	@dptr,a
   08C3 90s01r76           1693 	mov	dptr,#(_m + 0x0076)
   08C6 74 C1              1694 	mov	a,#0xC1
   08C8 F0                 1695 	movx	@dptr,a
   08C9 90s01r77           1696 	mov	dptr,#(_m + 0x0077)
   08CC 74 E3              1697 	mov	a,#0xE3
   08CE F0                 1698 	movx	@dptr,a
   08CF 90s01r78           1699 	mov	dptr,#(_m + 0x0078)
   08D2 74 6A              1700 	mov	a,#0x6A
   08D4 F0                 1701 	movx	@dptr,a
   08D5 90s01r79           1702 	mov	dptr,#(_m + 0x0079)
   08D8 74 47              1703 	mov	a,#0x47
   08DA F0                 1704 	movx	@dptr,a
   08DB 90s01r7A           1705 	mov	dptr,#(_m + 0x007a)
   08DE 74 0D              1706 	mov	a,#0x0D
   08E0 F0                 1707 	movx	@dptr,a
   08E1 90s01r7B           1708 	mov	dptr,#(_m + 0x007b)
   08E4 74 EB              1709 	mov	a,#0xEB
   08E6 F0                 1710 	movx	@dptr,a
   08E7 90s01r7C           1711 	mov	dptr,#(_m + 0x007c)
   08EA 74 A3              1712 	mov	a,#0xA3
   08EC F0                 1713 	movx	@dptr,a
   08ED 90s01r7D           1714 	mov	dptr,#(_m + 0x007d)
   08F0 74 81              1715 	mov	a,#0x81
   08F2 F0                 1716 	movx	@dptr,a
   08F3 90s01r7E           1717 	mov	dptr,#(_m + 0x007e)
   08F6 74 B5              1718 	mov	a,#0xB5
   08F8 F0                 1719 	movx	@dptr,a
   08F9 90s01r7F           1720 	mov	dptr,#(_m + 0x007f)
   08FC 74 BA              1721 	mov	a,#0xBA
   08FE F0                 1722 	movx	@dptr,a
                    08FF   1723 	G$main$0$0 ==.
                    08FF   1724 	C$main.c$29$1$1 ==.
                           1725 ;	main.c:29: volatile __xdata __at (0x180) unsigned char sprime[SIZE] = 
   08FF 90s01r80           1726 	mov	dptr,#_sprime
   0902 74 3B              1727 	mov	a,#0x3B
   0904 F0                 1728 	movx	@dptr,a
   0905 90s01r81           1729 	mov	dptr,#(_sprime + 0x0001)
   0908 74 FE              1730 	mov	a,#0xFE
   090A F0                 1731 	movx	@dptr,a
   090B 90s01r82           1732 	mov	dptr,#(_sprime + 0x0002)
   090E 74 13              1733 	mov	a,#0x13
   0910 F0                 1734 	movx	@dptr,a
   0911 90s01r83           1735 	mov	dptr,#(_sprime + 0x0003)
   0914 74 49              1736 	mov	a,#0x49
   0916 F0                 1737 	movx	@dptr,a
   0917 90s01r84           1738 	mov	dptr,#(_sprime + 0x0004)
   091A 74 55              1739 	mov	a,#0x55
   091C F0                 1740 	movx	@dptr,a
   091D 90s01r85           1741 	mov	dptr,#(_sprime + 0x0005)
   0920 74 1C              1742 	mov	a,#0x1C
   0922 F0                 1743 	movx	@dptr,a
   0923 90s01r86           1744 	mov	dptr,#(_sprime + 0x0006)
   0926 74 95              1745 	mov	a,#0x95
   0928 F0                 1746 	movx	@dptr,a
   0929 90s01r87           1747 	mov	dptr,#(_sprime + 0x0007)
   092C 74 10              1748 	mov	a,#0x10
   092E F0                 1749 	movx	@dptr,a
   092F 90s01r88           1750 	mov	dptr,#(_sprime + 0x0008)
   0932 74 74              1751 	mov	a,#0x74
   0934 F0                 1752 	movx	@dptr,a
   0935 90s01r89           1753 	mov	dptr,#(_sprime + 0x0009)
   0938 74 60              1754 	mov	a,#0x60
   093A F0                 1755 	movx	@dptr,a
   093B 90s01r8A           1756 	mov	dptr,#(_sprime + 0x000a)
   093E 74 FA              1757 	mov	a,#0xFA
   0940 F0                 1758 	movx	@dptr,a
   0941 90s01r8B           1759 	mov	dptr,#(_sprime + 0x000b)
   0944 74 E6              1760 	mov	a,#0xE6
   0946 F0                 1761 	movx	@dptr,a
   0947 90s01r8C           1762 	mov	dptr,#(_sprime + 0x000c)
   094A 74 25              1763 	mov	a,#0x25
   094C F0                 1764 	movx	@dptr,a
   094D 90s01r8D           1765 	mov	dptr,#(_sprime + 0x000d)
   0950 74 4B              1766 	mov	a,#0x4B
   0952 F0                 1767 	movx	@dptr,a
   0953 90s01r8E           1768 	mov	dptr,#(_sprime + 0x000e)
   0956 74 97              1769 	mov	a,#0x97
   0958 F0                 1770 	movx	@dptr,a
   0959 90s01r8F           1771 	mov	dptr,#(_sprime + 0x000f)
   095C 74 8A              1772 	mov	a,#0x8A
   095E F0                 1773 	movx	@dptr,a
   095F 90s01r90           1774 	mov	dptr,#(_sprime + 0x0010)
   0962 74 34              1775 	mov	a,#0x34
   0964 F0                 1776 	movx	@dptr,a
   0965 90s01r91           1777 	mov	dptr,#(_sprime + 0x0011)
   0968 74 92              1778 	mov	a,#0x92
   096A F0                 1779 	movx	@dptr,a
   096B 90s01r92           1780 	mov	dptr,#(_sprime + 0x0012)
   096E 74 37              1781 	mov	a,#0x37
   0970 F0                 1782 	movx	@dptr,a
   0971 90s01r93           1783 	mov	dptr,#(_sprime + 0x0013)
   0974 74 72              1784 	mov	a,#0x72
   0976 F0                 1785 	movx	@dptr,a
   0977 90s01r94           1786 	mov	dptr,#(_sprime + 0x0014)
   097A 74 AE              1787 	mov	a,#0xAE
   097C F0                 1788 	movx	@dptr,a
   097D 90s01r95           1789 	mov	dptr,#(_sprime + 0x0015)
   0980 74 1B              1790 	mov	a,#0x1B
   0982 F0                 1791 	movx	@dptr,a
   0983 90s01r96           1792 	mov	dptr,#(_sprime + 0x0016)
   0986 74 7D              1793 	mov	a,#0x7D
   0988 F0                 1794 	movx	@dptr,a
   0989 90s01r97           1795 	mov	dptr,#(_sprime + 0x0017)
   098C 74 CE              1796 	mov	a,#0xCE
   098E F0                 1797 	movx	@dptr,a
   098F 90s01r98           1798 	mov	dptr,#(_sprime + 0x0018)
   0992 74 9D              1799 	mov	a,#0x9D
   0994 F0                 1800 	movx	@dptr,a
   0995 90s01r99           1801 	mov	dptr,#(_sprime + 0x0019)
   0998 74 5F              1802 	mov	a,#0x5F
   099A F0                 1803 	movx	@dptr,a
   099B 90s01r9A           1804 	mov	dptr,#(_sprime + 0x001a)
   099E 74 EC              1805 	mov	a,#0xEC
   09A0 F0                 1806 	movx	@dptr,a
   09A1 90s01r9B           1807 	mov	dptr,#(_sprime + 0x001b)
   09A4 74 6C              1808 	mov	a,#0x6C
   09A6 F0                 1809 	movx	@dptr,a
   09A7 90s01r9C           1810 	mov	dptr,#(_sprime + 0x001c)
   09AA 74 13              1811 	mov	a,#0x13
   09AC F0                 1812 	movx	@dptr,a
   09AD 90s01r9D           1813 	mov	dptr,#(_sprime + 0x001d)
   09B0 74 0E              1814 	mov	a,#0x0E
   09B2 F0                 1815 	movx	@dptr,a
   09B3 90s01r9E           1816 	mov	dptr,#(_sprime + 0x001e)
   09B6 74 FE              1817 	mov	a,#0xFE
   09B8 F0                 1818 	movx	@dptr,a
   09B9 90s01r9F           1819 	mov	dptr,#(_sprime + 0x001f)
   09BC 74 C7              1820 	mov	a,#0xC7
   09BE F0                 1821 	movx	@dptr,a
   09BF 90s01rA0           1822 	mov	dptr,#(_sprime + 0x0020)
   09C2 74 B3              1823 	mov	a,#0xB3
   09C4 F0                 1824 	movx	@dptr,a
   09C5 90s01rA1           1825 	mov	dptr,#(_sprime + 0x0021)
   09C8 74 D4              1826 	mov	a,#0xD4
   09CA F0                 1827 	movx	@dptr,a
   09CB 90s01rA2           1828 	mov	dptr,#(_sprime + 0x0022)
   09CE 74 B4              1829 	mov	a,#0xB4
   09D0 F0                 1830 	movx	@dptr,a
   09D1 90s01rA3           1831 	mov	dptr,#(_sprime + 0x0023)
   09D4 74 03              1832 	mov	a,#0x03
   09D6 F0                 1833 	movx	@dptr,a
   09D7 90s01rA4           1834 	mov	dptr,#(_sprime + 0x0024)
   09DA 74 4C              1835 	mov	a,#0x4C
   09DC F0                 1836 	movx	@dptr,a
   09DD 90s01rA5           1837 	mov	dptr,#(_sprime + 0x0025)
   09E0 74 8B              1838 	mov	a,#0x8B
   09E2 F0                 1839 	movx	@dptr,a
   09E3 90s01rA6           1840 	mov	dptr,#(_sprime + 0x0026)
   09E6 74 AE              1841 	mov	a,#0xAE
   09E8 F0                 1842 	movx	@dptr,a
   09E9 90s01rA7           1843 	mov	dptr,#(_sprime + 0x0027)
   09EC 74 0D              1844 	mov	a,#0x0D
   09EE F0                 1845 	movx	@dptr,a
   09EF 90s01rA8           1846 	mov	dptr,#(_sprime + 0x0028)
   09F2 74 86              1847 	mov	a,#0x86
   09F4 F0                 1848 	movx	@dptr,a
   09F5 90s01rA9           1849 	mov	dptr,#(_sprime + 0x0029)
   09F8 74 DC              1850 	mov	a,#0xDC
   09FA F0                 1851 	movx	@dptr,a
   09FB 90s01rAA           1852 	mov	dptr,#(_sprime + 0x002a)
   09FE 74 65              1853 	mov	a,#0x65
   0A00 F0                 1854 	movx	@dptr,a
   0A01 90s01rAB           1855 	mov	dptr,#(_sprime + 0x002b)
   0A04 74 06              1856 	mov	a,#0x06
   0A06 F0                 1857 	movx	@dptr,a
   0A07 90s01rAC           1858 	mov	dptr,#(_sprime + 0x002c)
   0A0A 74 C4              1859 	mov	a,#0xC4
   0A0C F0                 1860 	movx	@dptr,a
   0A0D 90s01rAD           1861 	mov	dptr,#(_sprime + 0x002d)
   0A10 74 BB              1862 	mov	a,#0xBB
   0A12 F0                 1863 	movx	@dptr,a
   0A13 90s01rAE           1864 	mov	dptr,#(_sprime + 0x002e)
   0A16 74 5D              1865 	mov	a,#0x5D
   0A18 F0                 1866 	movx	@dptr,a
   0A19 90s01rAF           1867 	mov	dptr,#(_sprime + 0x002f)
   0A1C 74 15              1868 	mov	a,#0x15
   0A1E F0                 1869 	movx	@dptr,a
   0A1F 90s01rB0           1870 	mov	dptr,#(_sprime + 0x0030)
   0A22 74 BE              1871 	mov	a,#0xBE
   0A24 F0                 1872 	movx	@dptr,a
   0A25 90s01rB1           1873 	mov	dptr,#(_sprime + 0x0031)
   0A28 74 76              1874 	mov	a,#0x76
   0A2A F0                 1875 	movx	@dptr,a
   0A2B 90s01rB2           1876 	mov	dptr,#(_sprime + 0x0032)
   0A2E 74 26              1877 	mov	a,#0x26
   0A30 F0                 1878 	movx	@dptr,a
   0A31 90s01rB3           1879 	mov	dptr,#(_sprime + 0x0033)
   0A34 74 08              1880 	mov	a,#0x08
   0A36 F0                 1881 	movx	@dptr,a
   0A37 90s01rB4           1882 	mov	dptr,#(_sprime + 0x0034)
   0A3A 74 57              1883 	mov	a,#0x57
   0A3C F0                 1884 	movx	@dptr,a
   0A3D 90s01rB5           1885 	mov	dptr,#(_sprime + 0x0035)
   0A40 74 60              1886 	mov	a,#0x60
   0A42 F0                 1887 	movx	@dptr,a
   0A43 90s01rB6           1888 	mov	dptr,#(_sprime + 0x0036)
   0A46 74 D8              1889 	mov	a,#0xD8
   0A48 F0                 1890 	movx	@dptr,a
   0A49 90s01rB7           1891 	mov	dptr,#(_sprime + 0x0037)
   0A4C 74 83              1892 	mov	a,#0x83
   0A4E F0                 1893 	movx	@dptr,a
   0A4F 90s01rB8           1894 	mov	dptr,#(_sprime + 0x0038)
   0A52 74 76              1895 	mov	a,#0x76
   0A54 F0                 1896 	movx	@dptr,a
   0A55 90s01rB9           1897 	mov	dptr,#(_sprime + 0x0039)
   0A58 74 38              1898 	mov	a,#0x38
   0A5A F0                 1899 	movx	@dptr,a
   0A5B 90s01rBA           1900 	mov	dptr,#(_sprime + 0x003a)
   0A5E 74 1C              1901 	mov	a,#0x1C
   0A60 F0                 1902 	movx	@dptr,a
   0A61 90s01rBB           1903 	mov	dptr,#(_sprime + 0x003b)
   0A64 74 DE              1904 	mov	a,#0xDE
   0A66 F0                 1905 	movx	@dptr,a
   0A67 90s01rBC           1906 	mov	dptr,#(_sprime + 0x003c)
   0A6A 74 3B              1907 	mov	a,#0x3B
   0A6C F0                 1908 	movx	@dptr,a
   0A6D 90s01rBD           1909 	mov	dptr,#(_sprime + 0x003d)
   0A70 74 16              1910 	mov	a,#0x16
   0A72 F0                 1911 	movx	@dptr,a
   0A73 90s01rBE           1912 	mov	dptr,#(_sprime + 0x003e)
   0A76 74 94              1913 	mov	a,#0x94
   0A78 F0                 1914 	movx	@dptr,a
   0A79 90s01rBF           1915 	mov	dptr,#(_sprime + 0x003f)
   0A7C 74 2D              1916 	mov	a,#0x2D
   0A7E F0                 1917 	movx	@dptr,a
   0A7F 90s01rC0           1918 	mov	dptr,#(_sprime + 0x0040)
   0A82 74 CC              1919 	mov	a,#0xCC
   0A84 F0                 1920 	movx	@dptr,a
   0A85 90s01rC1           1921 	mov	dptr,#(_sprime + 0x0041)
   0A88 74 A5              1922 	mov	a,#0xA5
   0A8A F0                 1923 	movx	@dptr,a
   0A8B 90s01rC2           1924 	mov	dptr,#(_sprime + 0x0042)
   0A8E 74 8B              1925 	mov	a,#0x8B
   0A90 F0                 1926 	movx	@dptr,a
   0A91 90s01rC3           1927 	mov	dptr,#(_sprime + 0x0043)
   0A94 74 45              1928 	mov	a,#0x45
   0A96 F0                 1929 	movx	@dptr,a
   0A97 90s01rC4           1930 	mov	dptr,#(_sprime + 0x0044)
   0A9A 74 2D              1931 	mov	a,#0x2D
   0A9C F0                 1932 	movx	@dptr,a
   0A9D 90s01rC5           1933 	mov	dptr,#(_sprime + 0x0045)
   0AA0 74 32              1934 	mov	a,#0x32
   0AA2 F0                 1935 	movx	@dptr,a
   0AA3 90s01rC6           1936 	mov	dptr,#(_sprime + 0x0046)
   0AA6 74 87              1937 	mov	a,#0x87
   0AA8 F0                 1938 	movx	@dptr,a
   0AA9 90s01rC7           1939 	mov	dptr,#(_sprime + 0x0047)
   0AAC 74 12              1940 	mov	a,#0x12
   0AAE F0                 1941 	movx	@dptr,a
   0AAF 90s01rC8           1942 	mov	dptr,#(_sprime + 0x0048)
   0AB2 74 18              1943 	mov	a,#0x18
   0AB4 F0                 1944 	movx	@dptr,a
   0AB5 90s01rC9           1945 	mov	dptr,#(_sprime + 0x0049)
   0AB8 74 99              1946 	mov	a,#0x99
   0ABA F0                 1947 	movx	@dptr,a
   0ABB 90s01rCA           1948 	mov	dptr,#(_sprime + 0x004a)
   0ABE 74 DE              1949 	mov	a,#0xDE
   0AC0 F0                 1950 	movx	@dptr,a
   0AC1 90s01rCB           1951 	mov	dptr,#(_sprime + 0x004b)
   0AC4 74 4C              1952 	mov	a,#0x4C
   0AC6 F0                 1953 	movx	@dptr,a
   0AC7 90s01rCC           1954 	mov	dptr,#(_sprime + 0x004c)
   0ACA 74 2B              1955 	mov	a,#0x2B
   0ACC F0                 1956 	movx	@dptr,a
   0ACD 90s01rCD           1957 	mov	dptr,#(_sprime + 0x004d)
   0AD0 74 16              1958 	mov	a,#0x16
   0AD2 F0                 1959 	movx	@dptr,a
   0AD3 90s01rCE           1960 	mov	dptr,#(_sprime + 0x004e)
   0AD6 74 24              1961 	mov	a,#0x24
   0AD8 F0                 1962 	movx	@dptr,a
   0AD9 90s01rCF           1963 	mov	dptr,#(_sprime + 0x004f)
   0ADC 74 FA              1964 	mov	a,#0xFA
   0ADE F0                 1965 	movx	@dptr,a
   0ADF 90s01rD0           1966 	mov	dptr,#(_sprime + 0x0050)
   0AE2 74 2A              1967 	mov	a,#0x2A
   0AE4 F0                 1968 	movx	@dptr,a
   0AE5 90s01rD1           1969 	mov	dptr,#(_sprime + 0x0051)
   0AE8 74 69              1970 	mov	a,#0x69
   0AEA F0                 1971 	movx	@dptr,a
   0AEB 90s01rD2           1972 	mov	dptr,#(_sprime + 0x0052)
   0AEE 74 04              1973 	mov	a,#0x04
   0AF0 F0                 1974 	movx	@dptr,a
   0AF1 90s01rD3           1975 	mov	dptr,#(_sprime + 0x0053)
   0AF4 74 9C              1976 	mov	a,#0x9C
   0AF6 F0                 1977 	movx	@dptr,a
   0AF7 90s01rD4           1978 	mov	dptr,#(_sprime + 0x0054)
   0AFA 74 E8              1979 	mov	a,#0xE8
   0AFC F0                 1980 	movx	@dptr,a
   0AFD 90s01rD5           1981 	mov	dptr,#(_sprime + 0x0055)
   0B00 74 F3              1982 	mov	a,#0xF3
   0B02 F0                 1983 	movx	@dptr,a
   0B03 90s01rD6           1984 	mov	dptr,#(_sprime + 0x0056)
   0B06 74 2B              1985 	mov	a,#0x2B
   0B08 F0                 1986 	movx	@dptr,a
   0B09 90s01rD7           1987 	mov	dptr,#(_sprime + 0x0057)
   0B0C 74 08              1988 	mov	a,#0x08
   0B0E F0                 1989 	movx	@dptr,a
   0B0F 90s01rD8           1990 	mov	dptr,#(_sprime + 0x0058)
   0B12 74 79              1991 	mov	a,#0x79
   0B14 F0                 1992 	movx	@dptr,a
   0B15 90s01rD9           1993 	mov	dptr,#(_sprime + 0x0059)
   0B18 74 A8              1994 	mov	a,#0xA8
   0B1A F0                 1995 	movx	@dptr,a
   0B1B 90s01rDA           1996 	mov	dptr,#(_sprime + 0x005a)
   0B1E 74 C6              1997 	mov	a,#0xC6
   0B20 F0                 1998 	movx	@dptr,a
   0B21 90s01rDB           1999 	mov	dptr,#(_sprime + 0x005b)
   0B24 74 ED              2000 	mov	a,#0xED
   0B26 F0                 2001 	movx	@dptr,a
   0B27 90s01rDC           2002 	mov	dptr,#(_sprime + 0x005c)
   0B2A 74 B8              2003 	mov	a,#0xB8
   0B2C F0                 2004 	movx	@dptr,a
   0B2D 90s01rDD           2005 	mov	dptr,#(_sprime + 0x005d)
   0B30 74 D8              2006 	mov	a,#0xD8
   0B32 F0                 2007 	movx	@dptr,a
   0B33 90s01rDE           2008 	mov	dptr,#(_sprime + 0x005e)
   0B36 74 1A              2009 	mov	a,#0x1A
   0B38 F0                 2010 	movx	@dptr,a
   0B39 90s01rDF           2011 	mov	dptr,#(_sprime + 0x005f)
   0B3C 74 45              2012 	mov	a,#0x45
   0B3E F0                 2013 	movx	@dptr,a
   0B3F 90s01rE0           2014 	mov	dptr,#(_sprime + 0x0060)
   0B42 74 57              2015 	mov	a,#0x57
   0B44 F0                 2016 	movx	@dptr,a
   0B45 90s01rE1           2017 	mov	dptr,#(_sprime + 0x0061)
   0B48 74 0C              2018 	mov	a,#0x0C
   0B4A F0                 2019 	movx	@dptr,a
   0B4B 90s01rE2           2020 	mov	dptr,#(_sprime + 0x0062)
   0B4E 74 40              2021 	mov	a,#0x40
   0B50 F0                 2022 	movx	@dptr,a
   0B51 90s01rE3           2023 	mov	dptr,#(_sprime + 0x0063)
   0B54 74 D7              2024 	mov	a,#0xD7
   0B56 F0                 2025 	movx	@dptr,a
   0B57 90s01rE4           2026 	mov	dptr,#(_sprime + 0x0064)
   0B5A 74 37              2027 	mov	a,#0x37
   0B5C F0                 2028 	movx	@dptr,a
   0B5D 90s01rE5           2029 	mov	dptr,#(_sprime + 0x0065)
   0B60 74 A6              2030 	mov	a,#0xA6
   0B62 F0                 2031 	movx	@dptr,a
   0B63 90s01rE6           2032 	mov	dptr,#(_sprime + 0x0066)
   0B66 74 19              2033 	mov	a,#0x19
   0B68 F0                 2034 	movx	@dptr,a
   0B69 90s01rE7           2035 	mov	dptr,#(_sprime + 0x0067)
   0B6C 74 CD              2036 	mov	a,#0xCD
   0B6E F0                 2037 	movx	@dptr,a
   0B6F 90s01rE8           2038 	mov	dptr,#(_sprime + 0x0068)
   0B72 74 5A              2039 	mov	a,#0x5A
   0B74 F0                 2040 	movx	@dptr,a
   0B75 90s01rE9           2041 	mov	dptr,#(_sprime + 0x0069)
   0B78 74 56              2042 	mov	a,#0x56
   0B7A F0                 2043 	movx	@dptr,a
   0B7B 90s01rEA           2044 	mov	dptr,#(_sprime + 0x006a)
   0B7E 74 DE              2045 	mov	a,#0xDE
   0B80 F0                 2046 	movx	@dptr,a
   0B81 90s01rEB           2047 	mov	dptr,#(_sprime + 0x006b)
   0B84 74 F6              2048 	mov	a,#0xF6
   0B86 F0                 2049 	movx	@dptr,a
   0B87 90s01rEC           2050 	mov	dptr,#(_sprime + 0x006c)
   0B8A 74 29              2051 	mov	a,#0x29
   0B8C F0                 2052 	movx	@dptr,a
   0B8D 90s01rED           2053 	mov	dptr,#(_sprime + 0x006d)
   0B90 74 DB              2054 	mov	a,#0xDB
   0B92 F0                 2055 	movx	@dptr,a
   0B93 90s01rEE           2056 	mov	dptr,#(_sprime + 0x006e)
   0B96 74 15              2057 	mov	a,#0x15
   0B98 F0                 2058 	movx	@dptr,a
   0B99 90s01rEF           2059 	mov	dptr,#(_sprime + 0x006f)
   0B9C 74 5A              2060 	mov	a,#0x5A
   0B9E F0                 2061 	movx	@dptr,a
   0B9F 90s01rF0           2062 	mov	dptr,#(_sprime + 0x0070)
   0BA2 74 0B              2063 	mov	a,#0x0B
   0BA4 F0                 2064 	movx	@dptr,a
   0BA5 90s01rF1           2065 	mov	dptr,#(_sprime + 0x0071)
   0BA8 74 48              2066 	mov	a,#0x48
   0BAA F0                 2067 	movx	@dptr,a
   0BAB 90s01rF2           2068 	mov	dptr,#(_sprime + 0x0072)
   0BAE 74 43              2069 	mov	a,#0x43
   0BB0 F0                 2070 	movx	@dptr,a
   0BB1 90s01rF3           2071 	mov	dptr,#(_sprime + 0x0073)
   0BB4 74 36              2072 	mov	a,#0x36
   0BB6 F0                 2073 	movx	@dptr,a
   0BB7 90s01rF4           2074 	mov	dptr,#(_sprime + 0x0074)
   0BBA 74 ED              2075 	mov	a,#0xED
   0BBC F0                 2076 	movx	@dptr,a
   0BBD 90s01rF5           2077 	mov	dptr,#(_sprime + 0x0075)
   0BC0 74 FD              2078 	mov	a,#0xFD
   0BC2 F0                 2079 	movx	@dptr,a
   0BC3 90s01rF6           2080 	mov	dptr,#(_sprime + 0x0076)
   0BC6 74 BD              2081 	mov	a,#0xBD
   0BC8 F0                 2082 	movx	@dptr,a
   0BC9 90s01rF7           2083 	mov	dptr,#(_sprime + 0x0077)
   0BCC 74 90              2084 	mov	a,#0x90
   0BCE F0                 2085 	movx	@dptr,a
   0BCF 90s01rF8           2086 	mov	dptr,#(_sprime + 0x0078)
   0BD2 74 35              2087 	mov	a,#0x35
   0BD4 F0                 2088 	movx	@dptr,a
   0BD5 90s01rF9           2089 	mov	dptr,#(_sprime + 0x0079)
   0BD8 74 81              2090 	mov	a,#0x81
   0BDA F0                 2091 	movx	@dptr,a
   0BDB 90s01rFA           2092 	mov	dptr,#(_sprime + 0x007a)
   0BDE 74 3B              2093 	mov	a,#0x3B
   0BE0 F0                 2094 	movx	@dptr,a
   0BE1 90s01rFB           2095 	mov	dptr,#(_sprime + 0x007b)
   0BE4 74 A3              2096 	mov	a,#0xA3
   0BE6 F0                 2097 	movx	@dptr,a
   0BE7 90s01rFC           2098 	mov	dptr,#(_sprime + 0x007c)
   0BEA 74 18              2099 	mov	a,#0x18
   0BEC F0                 2100 	movx	@dptr,a
   0BED 90s01rFD           2101 	mov	dptr,#(_sprime + 0x007d)
   0BF0 74 54              2102 	mov	a,#0x54
   0BF2 F0                 2103 	movx	@dptr,a
   0BF3 90s01rFE           2104 	mov	dptr,#(_sprime + 0x007e)
   0BF6 74 B1              2105 	mov	a,#0xB1
   0BF8 F0                 2106 	movx	@dptr,a
   0BF9 90s01rFF           2107 	mov	dptr,#(_sprime + 0x007f)
   0BFC 74 D7              2108 	mov	a,#0xD7
   0BFE F0                 2109 	movx	@dptr,a
                           2110 	.area GSFINAL (CODE)
   0000 02s00r03           2111 	ljmp	__sdcc_program_startup
                           2112 ;--------------------------------------------------------
                           2113 ; Home
                           2114 ;--------------------------------------------------------
                           2115 	.area HOME    (CODE)
                           2116 	.area HOME    (CODE)
   0003                    2117 __sdcc_program_startup:
   0003 12s04rD8           2118 	lcall	_main
                           2119 ;	return from main will lock up
   0006 80 FE              2120 	sjmp .
                           2121 ;--------------------------------------------------------
                           2122 ; code
                           2123 ;--------------------------------------------------------
                           2124 	.area CSEG    (CODE)
                           2125 ;------------------------------------------------------------
                           2126 ;Allocation info for local variables in function 'mp_addition'
                           2127 ;------------------------------------------------------------
                           2128 ;in1                       Allocated with name '_mp_addition_PARM_2'
                           2129 ;in2                       Allocated with name '_mp_addition_PARM_3'
                           2130 ;res                       Allocated with name '_mp_addition_res_1_1'
                           2131 ;i                         Allocated to registers r5 r6 
                           2132 ;temp                      Allocated to registers r7 r0 
                           2133 ;------------------------------------------------------------
                    0000   2134 	G$mp_addition$0$0 ==.
                    0000   2135 	C$main.c$45$0$0 ==.
                           2136 ;	main.c:45: void mp_addition(unsigned char *res, unsigned char *in1, unsigned char *in2)
                           2137 ;	-----------------------------------------
                           2138 ;	 function mp_addition
                           2139 ;	-----------------------------------------
   0000                    2140 _mp_addition:
                    0002   2141 	ar2 = 0x02
                    0003   2142 	ar3 = 0x03
                    0004   2143 	ar4 = 0x04
                    0005   2144 	ar5 = 0x05
                    0006   2145 	ar6 = 0x06
                    0007   2146 	ar7 = 0x07
                    0000   2147 	ar0 = 0x00
                    0001   2148 	ar1 = 0x01
   0000 85 82*0C           2149 	mov	_mp_addition_res_1_1,dpl
   0003 85 83*0D           2150 	mov	(_mp_addition_res_1_1 + 1),dph
   0006 85 F0*0E           2151 	mov	(_mp_addition_res_1_1 + 2),b
                    0009   2152 	C$main.c$51$1$1 ==.
                           2153 ;	main.c:51: c = 0;	
   0009 75*00 00           2154 	mov	_c,#0x00
                    000C   2155 	C$main.c$53$1$1 ==.
                           2156 ;	main.c:53: for (i=0 ; i<SIZE; i++)
   000C 7D 00              2157 	mov	r5,#0x00
   000E 7E 00              2158 	mov	r6,#0x00
   0010                    2159 00101$:
   0010 C3                 2160 	clr	c
   0011 ED                 2161 	mov	a,r5
   0012 94 80              2162 	subb	a,#0x80
   0014 EE                 2163 	mov	a,r6
   0015 64 80              2164 	xrl	a,#0x80
   0017 94 80              2165 	subb	a,#0x80
   0019 50 5C              2166 	jnc	00104$
                    001B   2167 	C$main.c$55$2$2 ==.
                           2168 ;	main.c:55: temp = in1[i] + in2[i] + c;
   001B ED                 2169 	mov	a,r5
   001C 25*06              2170 	add	a,_mp_addition_PARM_2
   001E FF                 2171 	mov	r7,a
   001F EE                 2172 	mov	a,r6
   0020 35*07              2173 	addc	a,(_mp_addition_PARM_2 + 1)
   0022 F8                 2174 	mov	r0,a
   0023 A9*08              2175 	mov	r1,(_mp_addition_PARM_2 + 2)
   0025 8F 82              2176 	mov	dpl,r7
   0027 88 83              2177 	mov	dph,r0
   0029 89 F0              2178 	mov	b,r1
   002B 12s00r00           2179 	lcall	__gptrget
   002E FF                 2180 	mov	r7,a
   002F 78 00              2181 	mov	r0,#0x00
   0031 ED                 2182 	mov	a,r5
   0032 25*09              2183 	add	a,_mp_addition_PARM_3
   0034 F9                 2184 	mov	r1,a
   0035 EE                 2185 	mov	a,r6
   0036 35*0A              2186 	addc	a,(_mp_addition_PARM_3 + 1)
   0038 FA                 2187 	mov	r2,a
   0039 AB*0B              2188 	mov	r3,(_mp_addition_PARM_3 + 2)
   003B 89 82              2189 	mov	dpl,r1
   003D 8A 83              2190 	mov	dph,r2
   003F 8B F0              2191 	mov	b,r3
   0041 12s00r00           2192 	lcall	__gptrget
   0044 F9                 2193 	mov	r1,a
   0045 7A 00              2194 	mov	r2,#0x00
   0047 E9                 2195 	mov	a,r1
   0048 2F                 2196 	add	a,r7
   0049 FF                 2197 	mov	r7,a
   004A EA                 2198 	mov	a,r2
   004B 38                 2199 	addc	a,r0
   004C F8                 2200 	mov	r0,a
   004D E5*00              2201 	mov	a,_c
   004F FA                 2202 	mov	r2,a
   0050 33                 2203 	rlc	a
   0051 95 E0              2204 	subb	a,acc
   0053 FB                 2205 	mov	r3,a
   0054 EA                 2206 	mov	a,r2
   0055 2F                 2207 	add	a,r7
   0056 FF                 2208 	mov	r7,a
   0057 EB                 2209 	mov	a,r3
   0058 38                 2210 	addc	a,r0
   0059 F8                 2211 	mov	r0,a
                    005A   2212 	C$main.c$56$2$2 ==.
                           2213 ;	main.c:56: c = temp>>8;
   005A 88*00              2214 	mov	_c,r0
                    005C   2215 	C$main.c$60$2$2 ==.
                           2216 ;	main.c:60: res[i] = (char)(temp);
   005C ED                 2217 	mov	a,r5
   005D 25*0C              2218 	add	a,_mp_addition_res_1_1
   005F FA                 2219 	mov	r2,a
   0060 EE                 2220 	mov	a,r6
   0061 35*0D              2221 	addc	a,(_mp_addition_res_1_1 + 1)
   0063 FB                 2222 	mov	r3,a
   0064 AC*0E              2223 	mov	r4,(_mp_addition_res_1_1 + 2)
   0066 8A 82              2224 	mov	dpl,r2
   0068 8B 83              2225 	mov	dph,r3
   006A 8C F0              2226 	mov	b,r4
   006C EF                 2227 	mov	a,r7
   006D 12s00r00           2228 	lcall	__gptrput
                    0070   2229 	C$main.c$53$1$1 ==.
                           2230 ;	main.c:53: for (i=0 ; i<SIZE; i++)
   0070 0D                 2231 	inc	r5
   0071 BD 00 9C           2232 	cjne	r5,#0x00,00101$
   0074 0E                 2233 	inc	r6
   0075 80 99              2234 	sjmp	00101$
   0077                    2235 00104$:
                    0077   2236 	C$main.c$62$1$1 ==.
                           2237 ;	main.c:62: c = (char)c;
                    0077   2238 	C$main.c$63$1$1 ==.
                    0077   2239 	XG$mp_addition$0$0 ==.
   0077 22                 2240 	ret
                           2241 ;------------------------------------------------------------
                           2242 ;Allocation info for local variables in function 'mp_substraction'
                           2243 ;------------------------------------------------------------
                           2244 ;in1                       Allocated with name '_mp_substraction_PARM_2'
                           2245 ;in2                       Allocated with name '_mp_substraction_PARM_3'
                           2246 ;res                       Allocated with name '_mp_substraction_res_1_1'
                           2247 ;temp                      Allocated to registers r2 r3 
                           2248 ;i                         Allocated to registers r5 r6 
                           2249 ;------------------------------------------------------------
                    0078   2250 	G$mp_substraction$0$0 ==.
                    0078   2251 	C$main.c$66$1$1 ==.
                           2252 ;	main.c:66: void mp_substraction(unsigned char *res, unsigned char *in1, unsigned char *in2)
                           2253 ;	-----------------------------------------
                           2254 ;	 function mp_substraction
                           2255 ;	-----------------------------------------
   0078                    2256 _mp_substraction:
   0078 85 82*15           2257 	mov	_mp_substraction_res_1_1,dpl
   007B 85 83*16           2258 	mov	(_mp_substraction_res_1_1 + 1),dph
   007E 85 F0*17           2259 	mov	(_mp_substraction_res_1_1 + 2),b
                    0081   2260 	C$main.c$70$1$1 ==.
                           2261 ;	main.c:70: c = 0;	
   0081 75*00 00           2262 	mov	_c,#0x00
                    0084   2263 	C$main.c$72$1$1 ==.
                           2264 ;	main.c:72: for (i=0 ; i<SIZE; i++)
   0084 7D 00              2265 	mov	r5,#0x00
   0086 7E 00              2266 	mov	r6,#0x00
   0088                    2267 00104$:
   0088 C3                 2268 	clr	c
   0089 ED                 2269 	mov	a,r5
   008A 94 80              2270 	subb	a,#0x80
   008C EE                 2271 	mov	a,r6
   008D 64 80              2272 	xrl	a,#0x80
   008F 94 80              2273 	subb	a,#0x80
   0091 40 01              2274 	jc	00113$
   0093 22                 2275 	ret
   0094                    2276 00113$:
                    0094   2277 	C$main.c$74$2$2 ==.
                           2278 ;	main.c:74: temp = in1[i] - in2[i] + c;
   0094 ED                 2279 	mov	a,r5
   0095 25*0F              2280 	add	a,_mp_substraction_PARM_2
   0097 FF                 2281 	mov	r7,a
   0098 EE                 2282 	mov	a,r6
   0099 35*10              2283 	addc	a,(_mp_substraction_PARM_2 + 1)
   009B F8                 2284 	mov	r0,a
   009C A9*11              2285 	mov	r1,(_mp_substraction_PARM_2 + 2)
   009E 8F 82              2286 	mov	dpl,r7
   00A0 88 83              2287 	mov	dph,r0
   00A2 89 F0              2288 	mov	b,r1
   00A4 12s00r00           2289 	lcall	__gptrget
   00A7 FF                 2290 	mov	r7,a
   00A8 78 00              2291 	mov	r0,#0x00
   00AA ED                 2292 	mov	a,r5
   00AB 25*12              2293 	add	a,_mp_substraction_PARM_3
   00AD F9                 2294 	mov	r1,a
   00AE EE                 2295 	mov	a,r6
   00AF 35*13              2296 	addc	a,(_mp_substraction_PARM_3 + 1)
   00B1 FA                 2297 	mov	r2,a
   00B2 AB*14              2298 	mov	r3,(_mp_substraction_PARM_3 + 2)
   00B4 89 82              2299 	mov	dpl,r1
   00B6 8A 83              2300 	mov	dph,r2
   00B8 8B F0              2301 	mov	b,r3
   00BA 12s00r00           2302 	lcall	__gptrget
   00BD F9                 2303 	mov	r1,a
   00BE 7A 00              2304 	mov	r2,#0x00
   00C0 EF                 2305 	mov	a,r7
   00C1 C3                 2306 	clr	c
   00C2 99                 2307 	subb	a,r1
   00C3 FF                 2308 	mov	r7,a
   00C4 E8                 2309 	mov	a,r0
   00C5 9A                 2310 	subb	a,r2
   00C6 F8                 2311 	mov	r0,a
   00C7 E5*00              2312 	mov	a,_c
   00C9 FA                 2313 	mov	r2,a
   00CA 33                 2314 	rlc	a
   00CB 95 E0              2315 	subb	a,acc
   00CD FB                 2316 	mov	r3,a
   00CE EA                 2317 	mov	a,r2
   00CF 2F                 2318 	add	a,r7
   00D0 FA                 2319 	mov	r2,a
   00D1 EB                 2320 	mov	a,r3
   00D2 38                 2321 	addc	a,r0
                    00D3   2322 	C$main.c$75$2$2 ==.
                           2323 ;	main.c:75: c = (char)(temp>>15) & 0x0001;
   00D3 FB                 2324 	mov	r3,a
   00D4 23                 2325 	rl	a
   00D5 54 01              2326 	anl	a,#0x01
   00D7 30 E0 02           2327 	jnb	acc.0,00114$
   00DA 44 FE              2328 	orl	a,#0xfe
   00DC                    2329 00114$:
   00DC FC                 2330 	mov	r4,a
   00DD 33                 2331 	rlc	a
   00DE 95 E0              2332 	subb	a,acc
   00E0 FF                 2333 	mov	r7,a
   00E1 74 01              2334 	mov	a,#0x01
   00E3 5C                 2335 	anl	a,r4
   00E4 F5*00              2336 	mov	_c,a
                    00E6   2337 	C$main.c$76$2$2 ==.
                           2338 ;	main.c:76: if(c==1)
   00E6 74 01              2339 	mov	a,#0x01
   00E8 B5*00 05           2340 	cjne	a,_c,00102$
                    00EB   2341 	C$main.c$77$2$2 ==.
                           2342 ;	main.c:77: c = 0xFF;
   00EB 75*00 FF           2343 	mov	_c,#0xFF
   00EE 80 03              2344 	sjmp	00103$
   00F0                    2345 00102$:
                    00F0   2346 	C$main.c$79$2$2 ==.
                           2347 ;	main.c:79: c = 0;
   00F0 75*00 00           2348 	mov	_c,#0x00
   00F3                    2349 00103$:
                    00F3   2350 	C$main.c$80$2$2 ==.
                           2351 ;	main.c:80: res[i] = (char)(temp);
   00F3 ED                 2352 	mov	a,r5
   00F4 25*15              2353 	add	a,_mp_substraction_res_1_1
   00F6 FC                 2354 	mov	r4,a
   00F7 EE                 2355 	mov	a,r6
   00F8 35*16              2356 	addc	a,(_mp_substraction_res_1_1 + 1)
   00FA FF                 2357 	mov	r7,a
   00FB A8*17              2358 	mov	r0,(_mp_substraction_res_1_1 + 2)
   00FD 8C 82              2359 	mov	dpl,r4
   00FF 8F 83              2360 	mov	dph,r7
   0101 88 F0              2361 	mov	b,r0
   0103 EA                 2362 	mov	a,r2
   0104 12s00r00           2363 	lcall	__gptrput
                    0107   2364 	C$main.c$72$1$1 ==.
                           2365 ;	main.c:72: for (i=0 ; i<SIZE; i++)
   0107 0D                 2366 	inc	r5
   0108 BD 00 01           2367 	cjne	r5,#0x00,00117$
   010B 0E                 2368 	inc	r6
   010C                    2369 00117$:
                    010C   2370 	C$main.c$82$1$1 ==.
                    010C   2371 	XG$mp_substraction$0$0 ==.
   010C 02s00r88           2372 	ljmp	00104$
                           2373 ;------------------------------------------------------------
                           2374 ;Allocation info for local variables in function 'mp_multiplication'
                           2375 ;------------------------------------------------------------
                           2376 ;in1                       Allocated with name '_mp_multiplication_PARM_2'
                           2377 ;in2                       Allocated with name '_mp_multiplication_PARM_3'
                           2378 ;res                       Allocated with name '_mp_multiplication_res_1_1'
                           2379 ;c                         Allocated with name '_mp_multiplication_c_1_1'
                           2380 ;i                         Allocated with name '_mp_multiplication_i_1_1'
                           2381 ;j                         Allocated with name '_mp_multiplication_j_1_1'
                           2382 ;temp                      Allocated with name '_mp_multiplication_temp_1_1'
                           2383 ;sloc0                     Allocated with name '_mp_multiplication_sloc0_1_0'
                           2384 ;------------------------------------------------------------
                    010F   2385 	G$mp_multiplication$0$0 ==.
                    010F   2386 	C$main.c$85$1$1 ==.
                           2387 ;	main.c:85: void mp_multiplication(unsigned char *res, unsigned char *in1, unsigned char *in2)
                           2388 ;	-----------------------------------------
                           2389 ;	 function mp_multiplication
                           2390 ;	-----------------------------------------
   010F                    2391 _mp_multiplication:
   010F 85 82*1E           2392 	mov	_mp_multiplication_res_1_1,dpl
   0112 85 83*1F           2393 	mov	(_mp_multiplication_res_1_1 + 1),dph
   0115 85 F0*20           2394 	mov	(_mp_multiplication_res_1_1 + 2),b
                    0118   2395 	C$main.c$91$1$1 ==.
                           2396 ;	main.c:91: for (i=0 ; i<SIZE*2; i++)
   0118 E4                 2397 	clr	a
   0119 F5*23              2398 	mov	_mp_multiplication_i_1_1,a
   011B F5*24              2399 	mov	(_mp_multiplication_i_1_1 + 1),a
   011D                    2400 00101$:
   011D 74 FF              2401 	mov	a,#0x100 - 0x01
   011F 25*24              2402 	add	a,(_mp_multiplication_i_1_1 + 1)
   0121 40 20              2403 	jc	00104$
                    0123   2404 	C$main.c$93$2$2 ==.
                           2405 ;	main.c:93: res[i] = 0;
   0123 E5*23              2406 	mov	a,_mp_multiplication_i_1_1
   0125 25*1E              2407 	add	a,_mp_multiplication_res_1_1
   0127 FF                 2408 	mov	r7,a
   0128 E5*24              2409 	mov	a,(_mp_multiplication_i_1_1 + 1)
   012A 35*1F              2410 	addc	a,(_mp_multiplication_res_1_1 + 1)
   012C F8                 2411 	mov	r0,a
   012D A9*20              2412 	mov	r1,(_mp_multiplication_res_1_1 + 2)
   012F 8F 82              2413 	mov	dpl,r7
   0131 88 83              2414 	mov	dph,r0
   0133 89 F0              2415 	mov	b,r1
   0135 E4                 2416 	clr	a
   0136 12s00r00           2417 	lcall	__gptrput
                    0139   2418 	C$main.c$91$1$1 ==.
                           2419 ;	main.c:91: for (i=0 ; i<SIZE*2; i++)
   0139 05*23              2420 	inc	_mp_multiplication_i_1_1
   013B E4                 2421 	clr	a
   013C B5*23 DE           2422 	cjne	a,_mp_multiplication_i_1_1,00101$
   013F 05*24              2423 	inc	(_mp_multiplication_i_1_1 + 1)
   0141 80 DA              2424 	sjmp	00101$
   0143                    2425 00104$:
                    0143   2426 	C$main.c$95$1$1 ==.
                           2427 ;	main.c:95: for (i=0 ; i<SIZE; i++)
   0143 E4                 2428 	clr	a
   0144 F5*23              2429 	mov	_mp_multiplication_i_1_1,a
   0146 F5*24              2430 	mov	(_mp_multiplication_i_1_1 + 1),a
   0148                    2431 00109$:
   0148 C3                 2432 	clr	c
   0149 E5*23              2433 	mov	a,_mp_multiplication_i_1_1
   014B 94 80              2434 	subb	a,#0x80
   014D E5*24              2435 	mov	a,(_mp_multiplication_i_1_1 + 1)
   014F 94 00              2436 	subb	a,#0x00
   0151 40 01              2437 	jc	00122$
   0153 22                 2438 	ret
   0154                    2439 00122$:
                    0154   2440 	C$main.c$97$2$3 ==.
                           2441 ;	main.c:97: c = 0;
                    0154   2442 	C$main.c$98$2$3 ==.
                           2443 ;	main.c:98: for (j=0 ; j<SIZE; j++)
   0154 E4                 2444 	clr	a
   0155 F5*21              2445 	mov	_mp_multiplication_c_1_1,a
   0157 F5*22              2446 	mov	(_mp_multiplication_c_1_1 + 1),a
   0159 F5*25              2447 	mov	_mp_multiplication_j_1_1,a
   015B F5*26              2448 	mov	(_mp_multiplication_j_1_1 + 1),a
   015D E5*23              2449 	mov	a,_mp_multiplication_i_1_1
   015F 25*18              2450 	add	a,_mp_multiplication_PARM_2
   0161 F8                 2451 	mov	r0,a
   0162 E5*24              2452 	mov	a,(_mp_multiplication_i_1_1 + 1)
   0164 35*19              2453 	addc	a,(_mp_multiplication_PARM_2 + 1)
   0166 FA                 2454 	mov	r2,a
   0167 AB*1A              2455 	mov	r3,(_mp_multiplication_PARM_2 + 2)
   0169                    2456 00105$:
   0169 C3                 2457 	clr	c
   016A E5*25              2458 	mov	a,_mp_multiplication_j_1_1
   016C 94 80              2459 	subb	a,#0x80
   016E E5*26              2460 	mov	a,(_mp_multiplication_j_1_1 + 1)
   0170 94 00              2461 	subb	a,#0x00
   0172 40 03              2462 	jc	00123$
   0174 02s02r06           2463 	ljmp	00108$
   0177                    2464 00123$:
                    0177   2465 	C$main.c$100$3$4 ==.
                           2466 ;	main.c:100: temp = res[i+j] + in1[i] * in2[j] + c;
   0177 E5*25              2467 	mov	a,_mp_multiplication_j_1_1
   0179 25*23              2468 	add	a,_mp_multiplication_i_1_1
   017B FC                 2469 	mov	r4,a
   017C E5*26              2470 	mov	a,(_mp_multiplication_j_1_1 + 1)
   017E 35*24              2471 	addc	a,(_mp_multiplication_i_1_1 + 1)
   0180 FF                 2472 	mov	r7,a
   0181 EC                 2473 	mov	a,r4
   0182 25*1E              2474 	add	a,_mp_multiplication_res_1_1
   0184 FC                 2475 	mov	r4,a
   0185 EF                 2476 	mov	a,r7
   0186 35*1F              2477 	addc	a,(_mp_multiplication_res_1_1 + 1)
   0188 FF                 2478 	mov	r7,a
   0189 A9*20              2479 	mov	r1,(_mp_multiplication_res_1_1 + 2)
   018B 8C 82              2480 	mov	dpl,r4
   018D 8F 83              2481 	mov	dph,r7
   018F 89 F0              2482 	mov	b,r1
   0191 12s00r00           2483 	lcall	__gptrget
   0194 FD                 2484 	mov	r5,a
   0195 8D*2B              2485 	mov	_mp_multiplication_sloc0_1_0,r5
   0197 75*2C 00           2486 	mov	(_mp_multiplication_sloc0_1_0 + 1),#0x00
   019A 88 82              2487 	mov	dpl,r0
   019C 8A 83              2488 	mov	dph,r2
   019E 8B F0              2489 	mov	b,r3
   01A0 12s00r00           2490 	lcall	__gptrget
   01A3 FD                 2491 	mov	r5,a
   01A4 C0 00              2492 	push	ar0
   01A6 C0 02              2493 	push	ar2
   01A8 C0 03              2494 	push	ar3
   01AA E5*25              2495 	mov	a,_mp_multiplication_j_1_1
   01AC 25*1B              2496 	add	a,_mp_multiplication_PARM_3
   01AE FE                 2497 	mov	r6,a
   01AF E5*26              2498 	mov	a,(_mp_multiplication_j_1_1 + 1)
   01B1 35*1C              2499 	addc	a,(_mp_multiplication_PARM_3 + 1)
   01B3 FA                 2500 	mov	r2,a
   01B4 AB*1D              2501 	mov	r3,(_mp_multiplication_PARM_3 + 2)
   01B6 8E 82              2502 	mov	dpl,r6
   01B8 8A 83              2503 	mov	dph,r2
   01BA 8B F0              2504 	mov	b,r3
   01BC 12s00r00           2505 	lcall	__gptrget
   01BF FE                 2506 	mov	r6,a
   01C0 8D F0              2507 	mov	b,r5
   01C2 A4                 2508 	mul	ab
   01C3 25*2B              2509 	add	a,_mp_multiplication_sloc0_1_0
   01C5 FA                 2510 	mov	r2,a
   01C6 E5*2C              2511 	mov	a,(_mp_multiplication_sloc0_1_0 + 1)
   01C8 35 F0              2512 	addc	a,b
   01CA FB                 2513 	mov	r3,a
   01CB E5*21              2514 	mov	a,_mp_multiplication_c_1_1
   01CD 2A                 2515 	add	a,r2
   01CE FA                 2516 	mov	r2,a
   01CF E5*22              2517 	mov	a,(_mp_multiplication_c_1_1 + 1)
   01D1 3B                 2518 	addc	a,r3
   01D2 FB                 2519 	mov	r3,a
   01D3 8A*27              2520 	mov	_mp_multiplication_temp_1_1,r2
   01D5 8B*28              2521 	mov	(_mp_multiplication_temp_1_1 + 1),r3
   01D7 75*29 00           2522 	mov	(_mp_multiplication_temp_1_1 + 2),#0x00
   01DA 75*2A 00           2523 	mov	(_mp_multiplication_temp_1_1 + 3),#0x00
                    01DD   2524 	C$main.c$101$3$4 ==.
                           2525 ;	main.c:101: res[i+j] = (char)(temp & 0x000000FF);
   01DD A8*27              2526 	mov	r0,_mp_multiplication_temp_1_1
   01DF 7A 00              2527 	mov	r2,#0x00
   01E1 7B 00              2528 	mov	r3,#0x00
   01E3 7D 00              2529 	mov	r5,#0x00
   01E5 8C 82              2530 	mov	dpl,r4
   01E7 8F 83              2531 	mov	dph,r7
   01E9 89 F0              2532 	mov	b,r1
   01EB E8                 2533 	mov	a,r0
   01EC 12s00r00           2534 	lcall	__gptrput
                    01EF   2535 	C$main.c$103$3$4 ==.
                           2536 ;	main.c:103: c = (temp >> 8) & 0x0000FFFF;
   01EF 85*28*21           2537 	mov	_mp_multiplication_c_1_1,(_mp_multiplication_temp_1_1 + 1)
   01F2 85*29*22           2538 	mov	(_mp_multiplication_c_1_1 + 1),(_mp_multiplication_temp_1_1 + 2)
                    01F5   2539 	C$main.c$98$2$3 ==.
                           2540 ;	main.c:98: for (j=0 ; j<SIZE; j++)
   01F5 05*25              2541 	inc	_mp_multiplication_j_1_1
   01F7 E4                 2542 	clr	a
   01F8 B5*25 02           2543 	cjne	a,_mp_multiplication_j_1_1,00124$
   01FB 05*26              2544 	inc	(_mp_multiplication_j_1_1 + 1)
   01FD                    2545 00124$:
   01FD D0 03              2546 	pop	ar3
   01FF D0 02              2547 	pop	ar2
   0201 D0 00              2548 	pop	ar0
   0203 02s01r69           2549 	ljmp	00105$
   0206                    2550 00108$:
                    0206   2551 	C$main.c$105$2$3 ==.
                           2552 ;	main.c:105: res[i+SIZE] = (char)c;
   0206 74 80              2553 	mov	a,#0x80
   0208 25*23              2554 	add	a,_mp_multiplication_i_1_1
   020A FA                 2555 	mov	r2,a
   020B E4                 2556 	clr	a
   020C 35*24              2557 	addc	a,(_mp_multiplication_i_1_1 + 1)
   020E FB                 2558 	mov	r3,a
   020F EA                 2559 	mov	a,r2
   0210 25*1E              2560 	add	a,_mp_multiplication_res_1_1
   0212 FA                 2561 	mov	r2,a
   0213 EB                 2562 	mov	a,r3
   0214 35*1F              2563 	addc	a,(_mp_multiplication_res_1_1 + 1)
   0216 FB                 2564 	mov	r3,a
   0217 AC*20              2565 	mov	r4,(_mp_multiplication_res_1_1 + 2)
   0219 AF*21              2566 	mov	r7,_mp_multiplication_c_1_1
   021B 8A 82              2567 	mov	dpl,r2
   021D 8B 83              2568 	mov	dph,r3
   021F 8C F0              2569 	mov	b,r4
   0221 EF                 2570 	mov	a,r7
   0222 12s00r00           2571 	lcall	__gptrput
                    0225   2572 	C$main.c$95$1$1 ==.
                           2573 ;	main.c:95: for (i=0 ; i<SIZE; i++)
   0225 05*23              2574 	inc	_mp_multiplication_i_1_1
   0227 E4                 2575 	clr	a
   0228 B5*23 02           2576 	cjne	a,_mp_multiplication_i_1_1,00125$
   022B 05*24              2577 	inc	(_mp_multiplication_i_1_1 + 1)
   022D                    2578 00125$:
                    022D   2579 	C$main.c$107$1$1 ==.
                    022D   2580 	XG$mp_multiplication$0$0 ==.
   022D 02s01r48           2581 	ljmp	00109$
                           2582 ;------------------------------------------------------------
                           2583 ;Allocation info for local variables in function 'copy'
                           2584 ;------------------------------------------------------------
                           2585 ;in                        Allocated with name '_copy_PARM_2'
                           2586 ;res                       Allocated with name '_copy_res_1_1'
                           2587 ;i                         Allocated to registers r5 r6 
                           2588 ;------------------------------------------------------------
                    0230   2589 	G$copy$0$0 ==.
                    0230   2590 	C$main.c$110$1$1 ==.
                           2591 ;	main.c:110: void copy(unsigned char *res, unsigned char *in)
                           2592 ;	-----------------------------------------
                           2593 ;	 function copy
                           2594 ;	-----------------------------------------
   0230                    2595 _copy:
   0230 85 82*30           2596 	mov	_copy_res_1_1,dpl
   0233 85 83*31           2597 	mov	(_copy_res_1_1 + 1),dph
   0236 85 F0*32           2598 	mov	(_copy_res_1_1 + 2),b
                    0239   2599 	C$main.c$114$1$1 ==.
                           2600 ;	main.c:114: for (i=0 ; i<SIZE; i++)
   0239 7D 00              2601 	mov	r5,#0x00
   023B 7E 00              2602 	mov	r6,#0x00
   023D                    2603 00101$:
   023D C3                 2604 	clr	c
   023E ED                 2605 	mov	a,r5
   023F 94 80              2606 	subb	a,#0x80
   0241 EE                 2607 	mov	a,r6
   0242 64 80              2608 	xrl	a,#0x80
   0244 94 80              2609 	subb	a,#0x80
   0246 50 2E              2610 	jnc	00105$
                    0248   2611 	C$main.c$116$2$2 ==.
                           2612 ;	main.c:116: res[i] = in[i];
   0248 ED                 2613 	mov	a,r5
   0249 25*30              2614 	add	a,_copy_res_1_1
   024B FF                 2615 	mov	r7,a
   024C EE                 2616 	mov	a,r6
   024D 35*31              2617 	addc	a,(_copy_res_1_1 + 1)
   024F F8                 2618 	mov	r0,a
   0250 A9*32              2619 	mov	r1,(_copy_res_1_1 + 2)
   0252 ED                 2620 	mov	a,r5
   0253 25*2D              2621 	add	a,_copy_PARM_2
   0255 FA                 2622 	mov	r2,a
   0256 EE                 2623 	mov	a,r6
   0257 35*2E              2624 	addc	a,(_copy_PARM_2 + 1)
   0259 FB                 2625 	mov	r3,a
   025A AC*2F              2626 	mov	r4,(_copy_PARM_2 + 2)
   025C 8A 82              2627 	mov	dpl,r2
   025E 8B 83              2628 	mov	dph,r3
   0260 8C F0              2629 	mov	b,r4
   0262 12s00r00           2630 	lcall	__gptrget
   0265 FA                 2631 	mov	r2,a
   0266 8F 82              2632 	mov	dpl,r7
   0268 88 83              2633 	mov	dph,r0
   026A 89 F0              2634 	mov	b,r1
   026C 12s00r00           2635 	lcall	__gptrput
                    026F   2636 	C$main.c$114$1$1 ==.
                           2637 ;	main.c:114: for (i=0 ; i<SIZE; i++)
   026F 0D                 2638 	inc	r5
   0270 BD 00 CA           2639 	cjne	r5,#0x00,00101$
   0273 0E                 2640 	inc	r6
   0274 80 C7              2641 	sjmp	00101$
   0276                    2642 00105$:
                    0276   2643 	C$main.c$118$1$1 ==.
                    0276   2644 	XG$copy$0$0 ==.
   0276 22                 2645 	ret
                           2646 ;------------------------------------------------------------
                           2647 ;Allocation info for local variables in function 'md_addition'
                           2648 ;------------------------------------------------------------
                           2649 ;in1                       Allocated with name '_md_addition_PARM_2'
                           2650 ;in2                       Allocated with name '_md_addition_PARM_3'
                           2651 ;m                         Allocated with name '_md_addition_PARM_4'
                           2652 ;temp                      Allocated with name '_md_addition_PARM_5'
                           2653 ;res                       Allocated to registers r2 r3 r4 
                           2654 ;ct                        Allocated to registers r5 
                           2655 ;------------------------------------------------------------
                    0277   2656 	G$md_addition$0$0 ==.
                    0277   2657 	C$main.c$121$1$1 ==.
                           2658 ;	main.c:121: void md_addition(unsigned char *res, unsigned char *in1, unsigned char *in2, unsigned char *m, unsigned char *temp)
                           2659 ;	-----------------------------------------
                           2660 ;	 function md_addition
                           2661 ;	-----------------------------------------
   0277                    2662 _md_addition:
   0277 AA 82              2663 	mov	r2,dpl
   0279 AB 83              2664 	mov	r3,dph
   027B AC F0              2665 	mov	r4,b
                    027D   2666 	C$main.c$124$1$1 ==.
                           2667 ;	main.c:124: mp_addition(res, in1, in2);
   027D 85*33*06           2668 	mov	_mp_addition_PARM_2,_md_addition_PARM_2
   0280 85*34*07           2669 	mov	(_mp_addition_PARM_2 + 1),(_md_addition_PARM_2 + 1)
   0283 85*35*08           2670 	mov	(_mp_addition_PARM_2 + 2),(_md_addition_PARM_2 + 2)
   0286 85*36*09           2671 	mov	_mp_addition_PARM_3,_md_addition_PARM_3
   0289 85*37*0A           2672 	mov	(_mp_addition_PARM_3 + 1),(_md_addition_PARM_3 + 1)
   028C 85*38*0B           2673 	mov	(_mp_addition_PARM_3 + 2),(_md_addition_PARM_3 + 2)
   028F 8A 82              2674 	mov	dpl,r2
   0291 8B 83              2675 	mov	dph,r3
   0293 8C F0              2676 	mov	b,r4
   0295 C0 02              2677 	push	ar2
   0297 C0 03              2678 	push	ar3
   0299 C0 04              2679 	push	ar4
   029B 12s00r00           2680 	lcall	_mp_addition
   029E D0 04              2681 	pop	ar4
   02A0 D0 03              2682 	pop	ar3
   02A2 D0 02              2683 	pop	ar2
                    02A4   2684 	C$main.c$125$1$1 ==.
                           2685 ;	main.c:125: ct=c;
   02A4 AD*00              2686 	mov	r5,_c
                    02A6   2687 	C$main.c$127$1$1 ==.
                           2688 ;	main.c:127: mp_substraction(temp, res, m);
   02A6 8A*0F              2689 	mov	_mp_substraction_PARM_2,r2
   02A8 8B*10              2690 	mov	(_mp_substraction_PARM_2 + 1),r3
   02AA 8C*11              2691 	mov	(_mp_substraction_PARM_2 + 2),r4
   02AC 85*39*12           2692 	mov	_mp_substraction_PARM_3,_md_addition_PARM_4
   02AF 85*3A*13           2693 	mov	(_mp_substraction_PARM_3 + 1),(_md_addition_PARM_4 + 1)
   02B2 85*3B*14           2694 	mov	(_mp_substraction_PARM_3 + 2),(_md_addition_PARM_4 + 2)
   02B5 85*3C 82           2695 	mov	dpl,_md_addition_PARM_5
   02B8 85*3D 83           2696 	mov	dph,(_md_addition_PARM_5 + 1)
   02BB 85*3E F0           2697 	mov	b,(_md_addition_PARM_5 + 2)
   02BE C0 02              2698 	push	ar2
   02C0 C0 03              2699 	push	ar3
   02C2 C0 04              2700 	push	ar4
   02C4 C0 05              2701 	push	ar5
   02C6 12s00r78           2702 	lcall	_mp_substraction
   02C9 D0 05              2703 	pop	ar5
   02CB D0 04              2704 	pop	ar4
   02CD D0 03              2705 	pop	ar3
   02CF D0 02              2706 	pop	ar2
                    02D1   2707 	C$main.c$129$1$1 ==.
                           2708 ;	main.c:129: if (ct | (c==0))
   02D1 E5*00              2709 	mov	a,_c
   02D3 B4 01 00           2710 	cjne	a,#0x01,00106$
   02D6                    2711 00106$:
   02D6 E4                 2712 	clr	a
   02D7 33                 2713 	rlc	a
   02D8 FE                 2714 	mov	r6,a
   02D9 4D                 2715 	orl	a,r5
   02DA 60 12              2716 	jz	00103$
                    02DC   2717 	C$main.c$130$1$1 ==.
                           2718 ;	main.c:130: copy(res, temp);
   02DC 85*3C*2D           2719 	mov	_copy_PARM_2,_md_addition_PARM_5
   02DF 85*3D*2E           2720 	mov	(_copy_PARM_2 + 1),(_md_addition_PARM_5 + 1)
   02E2 85*3E*2F           2721 	mov	(_copy_PARM_2 + 2),(_md_addition_PARM_5 + 2)
   02E5 8A 82              2722 	mov	dpl,r2
   02E7 8B 83              2723 	mov	dph,r3
   02E9 8C F0              2724 	mov	b,r4
                    02EB   2725 	C$main.c$131$1$1 ==.
                    02EB   2726 	XG$md_addition$0$0 ==.
   02EB 02s02r30           2727 	ljmp	_copy
   02EE                    2728 00103$:
   02EE 22                 2729 	ret
                           2730 ;------------------------------------------------------------
                           2731 ;Allocation info for local variables in function 'md_substraction'
                           2732 ;------------------------------------------------------------
                           2733 ;in1                       Allocated with name '_md_substraction_PARM_2'
                           2734 ;in2                       Allocated with name '_md_substraction_PARM_3'
                           2735 ;m                         Allocated with name '_md_substraction_PARM_4'
                           2736 ;res                       Allocated to registers r2 r3 r4 
                           2737 ;ct                        Allocated to registers r5 
                           2738 ;------------------------------------------------------------
                    02EF   2739 	G$md_substraction$0$0 ==.
                    02EF   2740 	C$main.c$134$1$1 ==.
                           2741 ;	main.c:134: void md_substraction(unsigned char *res, unsigned char *in1, unsigned char *in2, unsigned char *m)
                           2742 ;	-----------------------------------------
                           2743 ;	 function md_substraction
                           2744 ;	-----------------------------------------
   02EF                    2745 _md_substraction:
   02EF AA 82              2746 	mov	r2,dpl
   02F1 AB 83              2747 	mov	r3,dph
   02F3 AC F0              2748 	mov	r4,b
                    02F5   2749 	C$main.c$137$1$1 ==.
                           2750 ;	main.c:137: mp_substraction(res, in1, in2);
   02F5 85*3F*0F           2751 	mov	_mp_substraction_PARM_2,_md_substraction_PARM_2
   02F8 85*40*10           2752 	mov	(_mp_substraction_PARM_2 + 1),(_md_substraction_PARM_2 + 1)
   02FB 85*41*11           2753 	mov	(_mp_substraction_PARM_2 + 2),(_md_substraction_PARM_2 + 2)
   02FE 85*42*12           2754 	mov	_mp_substraction_PARM_3,_md_substraction_PARM_3
   0301 85*43*13           2755 	mov	(_mp_substraction_PARM_3 + 1),(_md_substraction_PARM_3 + 1)
   0304 85*44*14           2756 	mov	(_mp_substraction_PARM_3 + 2),(_md_substraction_PARM_3 + 2)
   0307 8A 82              2757 	mov	dpl,r2
   0309 8B 83              2758 	mov	dph,r3
   030B 8C F0              2759 	mov	b,r4
   030D C0 02              2760 	push	ar2
   030F C0 03              2761 	push	ar3
   0311 C0 04              2762 	push	ar4
   0313 12s00r78           2763 	lcall	_mp_substraction
   0316 D0 04              2764 	pop	ar4
   0318 D0 03              2765 	pop	ar3
   031A D0 02              2766 	pop	ar2
                    031C   2767 	C$main.c$138$1$1 ==.
                           2768 ;	main.c:138: ct=c;
                    031C   2769 	C$main.c$140$1$1 ==.
                           2770 ;	main.c:140: if (ct != 0)
   031C E5*00              2771 	mov	a,_c
   031E FD                 2772 	mov	r5,a
   031F 60 18              2773 	jz	00103$
                    0321   2774 	C$main.c$142$2$2 ==.
                           2775 ;	main.c:142: mp_addition(res, res, m);
   0321 8A*06              2776 	mov	_mp_addition_PARM_2,r2
   0323 8B*07              2777 	mov	(_mp_addition_PARM_2 + 1),r3
   0325 8C*08              2778 	mov	(_mp_addition_PARM_2 + 2),r4
   0327 85*45*09           2779 	mov	_mp_addition_PARM_3,_md_substraction_PARM_4
   032A 85*46*0A           2780 	mov	(_mp_addition_PARM_3 + 1),(_md_substraction_PARM_4 + 1)
   032D 85*47*0B           2781 	mov	(_mp_addition_PARM_3 + 2),(_md_substraction_PARM_4 + 2)
   0330 8A 82              2782 	mov	dpl,r2
   0332 8B 83              2783 	mov	dph,r3
   0334 8C F0              2784 	mov	b,r4
                    0336   2785 	C$main.c$144$2$1 ==.
                    0336   2786 	XG$md_substraction$0$0 ==.
   0336 02s00r00           2787 	ljmp	_mp_addition
   0339                    2788 00103$:
   0339 22                 2789 	ret
                           2790 ;------------------------------------------------------------
                           2791 ;Allocation info for local variables in function 'md_multiplication'
                           2792 ;------------------------------------------------------------
                           2793 ;in1                       Allocated with name '_md_multiplication_PARM_2'
                           2794 ;in2                       Allocated with name '_md_multiplication_PARM_3'
                           2795 ;m                         Allocated with name '_md_multiplication_PARM_4'
                           2796 ;sp                        Allocated with name '_md_multiplication_PARM_5'
                           2797 ;res                       Allocated with name '_md_multiplication_res_1_1'
                           2798 ;i                         Allocated with name '_md_multiplication_i_1_1'
                           2799 ;j                         Allocated with name '_md_multiplication_j_1_1'
                           2800 ;mm                        Allocated with name '_md_multiplication_mm_1_1'
                           2801 ;cl                        Allocated with name '_md_multiplication_cl_1_1'
                           2802 ;temp                      Allocated with name '_md_multiplication_temp_1_1'
                           2803 ;------------------------------------------------------------
                    033A   2804 	G$md_multiplication$0$0 ==.
                    033A   2805 	C$main.c$147$2$1 ==.
                           2806 ;	main.c:147: void md_multiplication(unsigned char *res, unsigned char *in1, unsigned char *in2, unsigned char *m, unsigned char *sp)
                           2807 ;	-----------------------------------------
                           2808 ;	 function md_multiplication
                           2809 ;	-----------------------------------------
   033A                    2810 _md_multiplication:
   033A 85 82*54           2811 	mov	_md_multiplication_res_1_1,dpl
   033D 85 83*55           2812 	mov	(_md_multiplication_res_1_1 + 1),dph
   0340 85 F0*56           2813 	mov	(_md_multiplication_res_1_1 + 2),b
                    0343   2814 	C$main.c$153$1$1 ==.
                           2815 ;	main.c:153: mp_multiplication(res, in1, in2);
   0343 85*48*18           2816 	mov	_mp_multiplication_PARM_2,_md_multiplication_PARM_2
   0346 85*49*19           2817 	mov	(_mp_multiplication_PARM_2 + 1),(_md_multiplication_PARM_2 + 1)
   0349 85*4A*1A           2818 	mov	(_mp_multiplication_PARM_2 + 2),(_md_multiplication_PARM_2 + 2)
   034C 85*4B*1B           2819 	mov	_mp_multiplication_PARM_3,_md_multiplication_PARM_3
   034F 85*4C*1C           2820 	mov	(_mp_multiplication_PARM_3 + 1),(_md_multiplication_PARM_3 + 1)
   0352 85*4D*1D           2821 	mov	(_mp_multiplication_PARM_3 + 2),(_md_multiplication_PARM_3 + 2)
   0355 85*54 82           2822 	mov	dpl,_md_multiplication_res_1_1
   0358 85*55 83           2823 	mov	dph,(_md_multiplication_res_1_1 + 1)
   035B 85*56 F0           2824 	mov	b,(_md_multiplication_res_1_1 + 2)
   035E 12s01r0F           2825 	lcall	_mp_multiplication
                    0361   2826 	C$main.c$157$1$1 ==.
                           2827 ;	main.c:157: for (i=0 ; i<SIZE; i++)
   0361 E4                 2828 	clr	a
   0362 F5*57              2829 	mov	_md_multiplication_i_1_1,a
   0364 F5*58              2830 	mov	(_md_multiplication_i_1_1 + 1),a
   0366 AF*51              2831 	mov	r7,_md_multiplication_PARM_5
   0368 A8*52              2832 	mov	r0,(_md_multiplication_PARM_5 + 1)
   036A A9*53              2833 	mov	r1,(_md_multiplication_PARM_5 + 2)
   036C                    2834 00107$:
   036C C3                 2835 	clr	c
   036D E5*57              2836 	mov	a,_md_multiplication_i_1_1
   036F 94 80              2837 	subb	a,#0x80
   0371 E5*58              2838 	mov	a,(_md_multiplication_i_1_1 + 1)
   0373 94 00              2839 	subb	a,#0x00
   0375 40 03              2840 	jc	00118$
   0377 02s04r96           2841 	ljmp	00110$
   037A                    2842 00118$:
                    037A   2843 	C$main.c$159$2$2 ==.
                           2844 ;	main.c:159: cl = 0;
   037A E4                 2845 	clr	a
   037B F5*5D              2846 	mov	_md_multiplication_cl_1_1,a
   037D F5*5E              2847 	mov	(_md_multiplication_cl_1_1 + 1),a
                    037F   2848 	C$main.c$160$2$2 ==.
                           2849 ;	main.c:160: mm = (res[i] * sp[0]) & 0x00FF;
   037F E5*57              2850 	mov	a,_md_multiplication_i_1_1
   0381 25*54              2851 	add	a,_md_multiplication_res_1_1
   0383 FC                 2852 	mov	r4,a
   0384 E5*58              2853 	mov	a,(_md_multiplication_i_1_1 + 1)
   0386 35*55              2854 	addc	a,(_md_multiplication_res_1_1 + 1)
   0388 FA                 2855 	mov	r2,a
   0389 AB*56              2856 	mov	r3,(_md_multiplication_res_1_1 + 2)
   038B 8C 82              2857 	mov	dpl,r4
   038D 8A 83              2858 	mov	dph,r2
   038F 8B F0              2859 	mov	b,r3
   0391 12s00r00           2860 	lcall	__gptrget
   0394 FC                 2861 	mov	r4,a
   0395 8F 82              2862 	mov	dpl,r7
   0397 88 83              2863 	mov	dph,r0
   0399 89 F0              2864 	mov	b,r1
   039B 12s00r00           2865 	lcall	__gptrget
   039E FA                 2866 	mov	r2,a
   039F 8C F0              2867 	mov	b,r4
   03A1 A4                 2868 	mul	ab
   03A2 F5*5B              2869 	mov	_md_multiplication_mm_1_1,a
                    03A4   2870 	C$main.c$161$2$2 ==.
                           2871 ;	main.c:161: for (j=0 ; j<SIZE; j++)
   03A4 E4                 2872 	clr	a
   03A5 F5*5C              2873 	mov	(_md_multiplication_mm_1_1 + 1),a
   03A7 F5*59              2874 	mov	_md_multiplication_j_1_1,a
   03A9 F5*5A              2875 	mov	(_md_multiplication_j_1_1 + 1),a
   03AB                    2876 00103$:
   03AB C3                 2877 	clr	c
   03AC E5*59              2878 	mov	a,_md_multiplication_j_1_1
   03AE 94 80              2879 	subb	a,#0x80
   03B0 E5*5A              2880 	mov	a,(_md_multiplication_j_1_1 + 1)
   03B2 94 00              2881 	subb	a,#0x00
   03B4 40 03              2882 	jc	00119$
   03B6 02s04r60           2883 	ljmp	00106$
   03B9                    2884 00119$:
                    03B9   2885 	C$main.c$163$2$1 ==.
                           2886 ;	main.c:163: temp = res[i+j] + mm * m[j] + cl;
   03B9 C0 07              2887 	push	ar7
   03BB C0 00              2888 	push	ar0
   03BD C0 01              2889 	push	ar1
   03BF E5*59              2890 	mov	a,_md_multiplication_j_1_1
   03C1 25*57              2891 	add	a,_md_multiplication_i_1_1
   03C3 FB                 2892 	mov	r3,a
   03C4 E5*5A              2893 	mov	a,(_md_multiplication_j_1_1 + 1)
   03C6 35*58              2894 	addc	a,(_md_multiplication_i_1_1 + 1)
   03C8 FD                 2895 	mov	r5,a
   03C9 EB                 2896 	mov	a,r3
   03CA 25*54              2897 	add	a,_md_multiplication_res_1_1
   03CC FB                 2898 	mov	r3,a
   03CD ED                 2899 	mov	a,r5
   03CE 35*55              2900 	addc	a,(_md_multiplication_res_1_1 + 1)
   03D0 FD                 2901 	mov	r5,a
   03D1 AE*56              2902 	mov	r6,(_md_multiplication_res_1_1 + 2)
   03D3 8B 82              2903 	mov	dpl,r3
   03D5 8D 83              2904 	mov	dph,r5
   03D7 8E F0              2905 	mov	b,r6
   03D9 12s00r00           2906 	lcall	__gptrget
   03DC FA                 2907 	mov	r2,a
   03DD 7C 00              2908 	mov	r4,#0x00
   03DF E5*59              2909 	mov	a,_md_multiplication_j_1_1
   03E1 25*4E              2910 	add	a,_md_multiplication_PARM_4
   03E3 FF                 2911 	mov	r7,a
   03E4 E5*5A              2912 	mov	a,(_md_multiplication_j_1_1 + 1)
   03E6 35*4F              2913 	addc	a,(_md_multiplication_PARM_4 + 1)
   03E8 F8                 2914 	mov	r0,a
   03E9 A9*50              2915 	mov	r1,(_md_multiplication_PARM_4 + 2)
   03EB 8F 82              2916 	mov	dpl,r7
   03ED 88 83              2917 	mov	dph,r0
   03EF 89 F0              2918 	mov	b,r1
   03F1 12s00r00           2919 	lcall	__gptrget
   03F4 FF                 2920 	mov	r7,a
   03F5 8F*00              2921 	mov	__mulint_PARM_2,r7
   03F7 75*01 00           2922 	mov	(__mulint_PARM_2 + 1),#0x00
   03FA 85*5B 82           2923 	mov	dpl,_md_multiplication_mm_1_1
   03FD 85*5C 83           2924 	mov	dph,(_md_multiplication_mm_1_1 + 1)
   0400 C0 02              2925 	push	ar2
   0402 C0 03              2926 	push	ar3
   0404 C0 04              2927 	push	ar4
   0406 C0 05              2928 	push	ar5
   0408 C0 06              2929 	push	ar6
   040A C0 01              2930 	push	ar1
   040C 12s00r00           2931 	lcall	__mulint
   040F AF 82              2932 	mov	r7,dpl
   0411 A8 83              2933 	mov	r0,dph
   0413 D0 01              2934 	pop	ar1
   0415 D0 06              2935 	pop	ar6
   0417 D0 05              2936 	pop	ar5
   0419 D0 04              2937 	pop	ar4
   041B D0 03              2938 	pop	ar3
   041D D0 02              2939 	pop	ar2
   041F EF                 2940 	mov	a,r7
   0420 2A                 2941 	add	a,r2
   0421 FA                 2942 	mov	r2,a
   0422 E8                 2943 	mov	a,r0
   0423 3C                 2944 	addc	a,r4
   0424 FC                 2945 	mov	r4,a
   0425 E5*5D              2946 	mov	a,_md_multiplication_cl_1_1
   0427 2A                 2947 	add	a,r2
   0428 FA                 2948 	mov	r2,a
   0429 E5*5E              2949 	mov	a,(_md_multiplication_cl_1_1 + 1)
   042B 3C                 2950 	addc	a,r4
   042C FC                 2951 	mov	r4,a
   042D 8A*5F              2952 	mov	_md_multiplication_temp_1_1,r2
   042F 8C*60              2953 	mov	(_md_multiplication_temp_1_1 + 1),r4
   0431 75*61 00           2954 	mov	(_md_multiplication_temp_1_1 + 2),#0x00
   0434 75*62 00           2955 	mov	(_md_multiplication_temp_1_1 + 3),#0x00
                    0437   2956 	C$main.c$164$3$3 ==.
                           2957 ;	main.c:164: res[i+j] = (char)(temp & 0x00FF);
   0437 A9*5F              2958 	mov	r1,_md_multiplication_temp_1_1
   0439 7A 00              2959 	mov	r2,#0x00
   043B 7C 00              2960 	mov	r4,#0x00
   043D 7F 00              2961 	mov	r7,#0x00
   043F 8B 82              2962 	mov	dpl,r3
   0441 8D 83              2963 	mov	dph,r5
   0443 8E F0              2964 	mov	b,r6
   0445 E9                 2965 	mov	a,r1
   0446 12s00r00           2966 	lcall	__gptrput
                    0449   2967 	C$main.c$166$3$3 ==.
                           2968 ;	main.c:166: cl = (temp >> 8) & 0x0000FFFF;
   0449 85*60*5D           2969 	mov	_md_multiplication_cl_1_1,(_md_multiplication_temp_1_1 + 1)
   044C 85*61*5E           2970 	mov	(_md_multiplication_cl_1_1 + 1),(_md_multiplication_temp_1_1 + 2)
                    044F   2971 	C$main.c$161$2$2 ==.
                           2972 ;	main.c:161: for (j=0 ; j<SIZE; j++)
   044F 05*59              2973 	inc	_md_multiplication_j_1_1
   0451 E4                 2974 	clr	a
   0452 B5*59 02           2975 	cjne	a,_md_multiplication_j_1_1,00120$
   0455 05*5A              2976 	inc	(_md_multiplication_j_1_1 + 1)
   0457                    2977 00120$:
   0457 D0 01              2978 	pop	ar1
   0459 D0 00              2979 	pop	ar0
   045B D0 07              2980 	pop	ar7
   045D 02s03rAB           2981 	ljmp	00103$
   0460                    2982 00106$:
                    0460   2983 	C$main.c$168$2$2 ==.
                           2984 ;	main.c:168: res[i+SIZE] += cl;
   0460 74 80              2985 	mov	a,#0x80
   0462 25*57              2986 	add	a,_md_multiplication_i_1_1
   0464 FA                 2987 	mov	r2,a
   0465 E4                 2988 	clr	a
   0466 35*58              2989 	addc	a,(_md_multiplication_i_1_1 + 1)
   0468 FB                 2990 	mov	r3,a
   0469 EA                 2991 	mov	a,r2
   046A 25*54              2992 	add	a,_md_multiplication_res_1_1
   046C FA                 2993 	mov	r2,a
   046D EB                 2994 	mov	a,r3
   046E 35*55              2995 	addc	a,(_md_multiplication_res_1_1 + 1)
   0470 FB                 2996 	mov	r3,a
   0471 AC*56              2997 	mov	r4,(_md_multiplication_res_1_1 + 2)
   0473 8A 82              2998 	mov	dpl,r2
   0475 8B 83              2999 	mov	dph,r3
   0477 8C F0              3000 	mov	b,r4
   0479 12s00r00           3001 	lcall	__gptrget
   047C FD                 3002 	mov	r5,a
   047D E5*5D              3003 	mov	a,_md_multiplication_cl_1_1
   047F FE                 3004 	mov	r6,a
   0480 2D                 3005 	add	a,r5
   0481 FD                 3006 	mov	r5,a
   0482 8A 82              3007 	mov	dpl,r2
   0484 8B 83              3008 	mov	dph,r3
   0486 8C F0              3009 	mov	b,r4
   0488 12s00r00           3010 	lcall	__gptrput
                    048B   3011 	C$main.c$157$1$1 ==.
                           3012 ;	main.c:157: for (i=0 ; i<SIZE; i++)
   048B 05*57              3013 	inc	_md_multiplication_i_1_1
   048D E4                 3014 	clr	a
   048E B5*57 02           3015 	cjne	a,_md_multiplication_i_1_1,00121$
   0491 05*58              3016 	inc	(_md_multiplication_i_1_1 + 1)
   0493                    3017 00121$:
   0493 02s03r6C           3018 	ljmp	00107$
   0496                    3019 00110$:
                    0496   3020 	C$main.c$172$1$1 ==.
                           3021 ;	main.c:172: mp_substraction(res, res+SIZE, m);
   0496 74 80              3022 	mov	a,#0x80
   0498 25*54              3023 	add	a,_md_multiplication_res_1_1
   049A F5*0F              3024 	mov	_mp_substraction_PARM_2,a
   049C E4                 3025 	clr	a
   049D 35*55              3026 	addc	a,(_md_multiplication_res_1_1 + 1)
   049F F5*10              3027 	mov	(_mp_substraction_PARM_2 + 1),a
   04A1 85*56*11           3028 	mov	(_mp_substraction_PARM_2 + 2),(_md_multiplication_res_1_1 + 2)
   04A4 85*4E*12           3029 	mov	_mp_substraction_PARM_3,_md_multiplication_PARM_4
   04A7 85*4F*13           3030 	mov	(_mp_substraction_PARM_3 + 1),(_md_multiplication_PARM_4 + 1)
   04AA 85*50*14           3031 	mov	(_mp_substraction_PARM_3 + 2),(_md_multiplication_PARM_4 + 2)
   04AD 85*54 82           3032 	mov	dpl,_md_multiplication_res_1_1
   04B0 85*55 83           3033 	mov	dph,(_md_multiplication_res_1_1 + 1)
   04B3 85*56 F0           3034 	mov	b,(_md_multiplication_res_1_1 + 2)
   04B6 12s00r78           3035 	lcall	_mp_substraction
                    04B9   3036 	C$main.c$174$1$1 ==.
                           3037 ;	main.c:174: if (c != 0)
   04B9 E5*00              3038 	mov	a,_c
   04BB 60 1A              3039 	jz	00111$
                    04BD   3040 	C$main.c$176$2$4 ==.
                           3041 ;	main.c:176: copy(res, res+SIZE);
   04BD 74 80              3042 	mov	a,#0x80
   04BF 25*54              3043 	add	a,_md_multiplication_res_1_1
   04C1 F5*2D              3044 	mov	_copy_PARM_2,a
   04C3 E4                 3045 	clr	a
   04C4 35*55              3046 	addc	a,(_md_multiplication_res_1_1 + 1)
   04C6 F5*2E              3047 	mov	(_copy_PARM_2 + 1),a
   04C8 85*56*2F           3048 	mov	(_copy_PARM_2 + 2),(_md_multiplication_res_1_1 + 2)
   04CB 85*54 82           3049 	mov	dpl,_md_multiplication_res_1_1
   04CE 85*55 83           3050 	mov	dph,(_md_multiplication_res_1_1 + 1)
   04D1 85*56 F0           3051 	mov	b,(_md_multiplication_res_1_1 + 2)
                    04D4   3052 	C$main.c$178$2$1 ==.
                    04D4   3053 	XG$md_multiplication$0$0 ==.
   04D4 02s02r30           3054 	ljmp	_copy
   04D7                    3055 00111$:
   04D7 22                 3056 	ret
                           3057 ;------------------------------------------------------------
                           3058 ;Allocation info for local variables in function 'main'
                           3059 ;------------------------------------------------------------
                           3060 ;------------------------------------------------------------
                    04D8   3061 	G$main$0$0 ==.
                    04D8   3062 	C$main.c$180$2$1 ==.
                           3063 ;	main.c:180: int main()
                           3064 ;	-----------------------------------------
                           3065 ;	 function main
                           3066 ;	-----------------------------------------
   04D8                    3067 _main:
                    04D8   3068 	C$main.c$184$1$1 ==.
                           3069 ;	main.c:184: startBrk = 1;
   04D8 90 FF FE           3070 	mov	dptr,#_startBrk
   04DB 74 01              3071 	mov	a,#0x01
   04DD F0                 3072 	movx	@dptr,a
                    04DE   3073 	C$main.c$204$1$1 ==.
                           3074 ;	main.c:204: md_multiplication(resM, x, y, m, sprime);
   04DE 75*48r00           3075 	mov	_md_multiplication_PARM_2,#_x
   04E1 75*49s00           3076 	mov	(_md_multiplication_PARM_2 + 1),#(_x >> 8)
   04E4 75*4A 00           3077 	mov	(_md_multiplication_PARM_2 + 2),#0x00
   04E7 75*4Br80           3078 	mov	_md_multiplication_PARM_3,#_y
   04EA 75*4Cs00           3079 	mov	(_md_multiplication_PARM_3 + 1),#(_y >> 8)
   04ED 75*4D 00           3080 	mov	(_md_multiplication_PARM_3 + 2),#0x00
   04F0 75*4Er00           3081 	mov	_md_multiplication_PARM_4,#_m
   04F3 75*4Fs01           3082 	mov	(_md_multiplication_PARM_4 + 1),#(_m >> 8)
   04F6 75*50 00           3083 	mov	(_md_multiplication_PARM_4 + 2),#0x00
   04F9 75*51r80           3084 	mov	_md_multiplication_PARM_5,#_sprime
   04FC 75*52s01           3085 	mov	(_md_multiplication_PARM_5 + 1),#(_sprime >> 8)
   04FF 75*53 00           3086 	mov	(_md_multiplication_PARM_5 + 2),#0x00
   0502 90 05 00           3087 	mov	dptr,#_resM
   0505 75 F0 00           3088 	mov	b,#0x00
   0508 12s03r3A           3089 	lcall	_md_multiplication
                    050B   3090 	C$main.c$208$1$1 ==.
                           3091 ;	main.c:208: endBrk=1;
   050B 90 FF FF           3092 	mov	dptr,#_endBrk
   050E 74 01              3093 	mov	a,#0x01
   0510 F0                 3094 	movx	@dptr,a
                    0511   3095 	C$main.c$210$1$1 ==.
                           3096 ;	main.c:210: return 0;
   0511 90 00 00           3097 	mov	dptr,#0x0000
                    0514   3098 	C$main.c$211$1$1 ==.
                    0514   3099 	XG$main$0$0 ==.
   0514 22                 3100 	ret
                           3101 	.area CSEG    (CODE)
                           3102 	.area CONST   (CODE)
                           3103 	.area XINIT   (CODE)
                           3104 	.area CABS    (ABS,CODE)
